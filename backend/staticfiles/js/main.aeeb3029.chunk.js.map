{"version":3,"sources":["constants/productConstants.js","reducers/productReducers.js","constants/cartConstants.js","reducers/cartReducers.js","constants/userConstants.js","reducers/userReducers.js","constants/orderConstants.js","store.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","initialProdcutListState","products","loading","initialProductState","product","reviews","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","cartItems","shippongAddress","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","initialUserState","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productListReducer","state","action","type","payload","page","pages","error","productDetailsReducer","cartReducer","item","existItem","find","cartItem","map","filter","shippingAddress","paymentMethod","userLoginReducer","userInfo","userRegisterReducer","userDetailsReducer","user","userUpdateProfileReducer","success","userListReducer","users","orderCreateReducer","order","orderDetailsReducer","orderItems","orderPayReducer","orderListMyReducer","orders","userDeleteReducer","userUpdateReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","orderListReducer","orderDeliverReducer","productCreateReviewReducer","productTopRatedReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","trim","push","location","pathname","inline","Control","name","placeholder","onChange","target","value","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","rating","review","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","numReviews","price","listProducts","listProducDetails","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","x","active","ProductCarousel","productTopRated","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","search","length","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productCreateReview","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","currentCount","disabled","moment","createdAt","format","productId","post","Group","controlId","Label","rows","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","accumulator","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","userLogin","username","login","RegisterScreen","setName","confirmPassword","setconfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","orderListMy","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","setState","postCode","setPostCode","country","setCountry","shippingData","PaymentScreen","SetPaymentMethod","paymentData","Check","label","checked","PlaceOrderScreen","orderCreate","cart","itemsPrice","acc","shippingPrice","taxPrice","index","createOrder","ItemsPrice","OrderScreen","orderId","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","sdkReady","setSdkReady","orderItem","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","userList","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"+KAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBCF1BC,EAA0B,CAC9BC,SAAU,GACVC,SAAS,GAGLC,EAAsB,CAC1BC,QAAS,CACPC,QAAS,IAEXH,SAAS,G,QCpCEI,EAAgB,gBAChBC,EAAmB,mBACnBC,EAA6B,6BAC7BC,EAA2B,2BAC3BC,EAAmB,mBCI1BC,EAAY,GACZC,EAAkB,GCTXC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBCH3BC,GAAmB,CACvBrC,SAAS,GC9BEsC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCK7BC,GAAUC,0BAAgB,CAC9BC,mBNOgC,WAA8C,IAA7CC,EAA4C,uDAApCjE,EAAyBkE,EAAW,uCAC7E,OAAQA,EAAOC,MACb,KAAK3F,EACH,OAAO,2BACFyF,GADL,IAEE/D,SAAS,EACTD,SAAU,KAEd,KAAKxB,EACH,OAAO,2BACFwF,GADL,IAEE/D,SAAS,EACTD,SAAUiE,EAAOE,QAAQnE,SACzBoE,KAAMH,EAAOE,QAAQC,KACrBC,MAAOJ,EAAOE,QAAQE,QAE1B,KAAK5F,EACH,OAAO,2BACFuF,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,QACE,OAAOH,IM7BXO,sBNiCmC,WAA0C,IAAzCP,EAAwC,uDAAhC9D,EAAqB+D,EAAW,uCAC5E,OAAQA,EAAOC,MACb,KAAKxF,EACH,OAAO,2BACFsF,GADL,IAEE/D,SAAS,IAEb,KAAKtB,EACH,OAAO,2BACFqF,GADL,IAEE/D,SAAS,EACTE,QAAS8D,EAAOE,UAEpB,KAAKvF,EACH,OAAO,2BACFoF,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,QACE,OAAOH,IMpDXQ,YJvByB,WAAqD,IAApDR,EAAmD,uDAA3C,CAAEtD,YAAWC,mBAAmBsD,EAAW,uCAC7E,OAAQA,EAAOC,MACb,KAAK7D,EAEH,IAAMoE,EAAOR,EAAOE,QACdO,EAAYV,EAAMtD,UAAUiE,MAChC,SAACC,GAAD,OAAcA,EAASzE,UAAYsE,EAAKtE,WAE1C,OAAIuE,EACK,2BACFV,GADL,IAEEtD,UAAWsD,EAAMtD,UAAUmE,KACzB,SAACD,GAAD,OACEA,EAASzE,UAAYuE,EAAUvE,QAAUsE,EAAOG,OAI/C,2BACFZ,GADL,IAEEtD,UAAU,GAAD,mBAAMsD,EAAMtD,WAAZ,CAAuB+D,MAGtC,KAAKnE,EACH,OAAO,2BACF0D,GADL,IAEEtD,UAAWsD,EAAMtD,UAAUoE,QACzB,SAACF,GAAD,OAAcA,EAASzE,UAAY8D,EAAOE,aAGhD,KAAK5D,EACH,OAAO,2BACFyD,GADL,IAEEe,gBAAiBd,EAAOE,UAE5B,KAAK3D,EACH,OAAO,2BACFwD,GADL,IAEEgB,cAAef,EAAOE,UAE1B,KAAK1D,EACH,OAAO,2BACFuD,GADL,IAEEtD,UAAW,KAEf,QACE,OAAOsD,IIrBXiB,iBFF8B,WAAuC,IAAtCjB,EAAqC,uDAA7B1B,GAAkB2B,EAAW,uCACpE,OAAQA,EAAOC,MACb,KAAKtD,EACH,OAAO,2BACFoD,GADL,IAEE/D,SAAS,IAEb,KAAKY,EACH,OAAO,2BACFmD,GADL,IAEE/D,SAAS,EACTiF,SAAUjB,EAAOE,UAErB,KAAKrD,EACH,OAAO,2BACFkD,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKpD,EACH,MAAO,GAET,QACE,OAAOiD,IEpBXmB,oBFwBiC,WAAuC,IAAtCnB,EAAqC,uDAA7B1B,GAAkB2B,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAKlD,EACH,OAAO,2BACFgD,GADL,IAEE/D,SAAS,IAEb,KAAKgB,EACH,OAAO,2BACF+C,GADL,IAEE/D,SAAS,EACTiF,SAAUjB,EAAOE,UAErB,KAAKjD,EACH,OAAO,2BACF8C,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKpD,EACH,MAAO,GAET,QACE,OAAOiD,IE9CXoB,mBFkDgC,WAAmC,IAAlCpB,EAAiC,uDAAzB,CAAEqB,KAAM,IAAMpB,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAK/C,EACH,OAAO,2BACF6C,GADL,IAEE/D,SAAS,IAEb,KAAKmB,EACH,OAAO,2BACF4C,GADL,IAEE/D,SAAS,EACToF,KAAMpB,EAAOE,UAEjB,KAAK9C,GACH,OAAO,2BACF2C,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAK7C,GACH,OAAO,2BACF0C,GADL,IAEEqB,KAAM,KAGV,QACE,OAAOrB,IE3EXsB,yBF+EsC,WAAuC,IAAtCtB,EAAqC,uDAA7B1B,GAAkB2B,EAAW,uCAC5E,OAAQA,EAAOC,MACb,KAAK3C,GACH,OAAO,2BACFyC,GADL,IAEE/D,SAAS,IAEb,KAAKuB,GACH,OAAO,2BACFwC,GADL,IAEE/D,SAAS,EACTsF,SAAS,EACTL,SAAUjB,EAAOE,UAErB,KAAK1C,GACH,OAAO,2BACFuC,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKzC,GACH,MAAO,GAET,QACE,OAAOsC,IEtGXwB,gBF0G6B,WAAoC,IAAnCxB,EAAkC,uDAA1B,CAAEyB,MAAO,IAAMxB,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAKvC,GACH,OAAO,2BACFqC,GADL,IAEE/D,SAAS,IAEb,KAAK2B,GACH,OAAO,2BACFoC,GADL,IAEE/D,SAAS,EACTwF,MAAOxB,EAAOE,UAElB,KAAKtC,GACH,OAAO,2BACFmC,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKrC,GACH,OAAO,2BACFkC,GADL,IAEEyB,MAAO,KAEX,QACE,OAAOzB,IElIX0B,mBCfgC,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAIC,EAAW,uCACxD,OAAQA,EAAOC,MACb,KAAK3B,GACH,MAAO,CACLtC,SAAS,GAEb,KAAKuC,GACH,MAAO,CACLvC,SAAS,EACTsF,SAAS,EACTI,MAAO1B,EAAOE,SAElB,KAAK1B,GACH,MAAO,CACLxC,SAAS,EACTqE,MAAOL,EAAOE,SAElB,KAAKzB,GACH,MAAO,GAET,QACE,OAAOsB,IDLX4B,oBCSiC,WAG7B,IAFJ5B,EAEG,uDAFK,CAAE/D,SAAS,EAAM4F,WAAY,GAAId,gBAAiB,IAC1Dd,EACG,uCACH,OAAQA,EAAOC,MACb,KAAKvB,GACH,OAAO,2BACFqB,GADL,IAEE/D,SAAS,IAEb,KAAK2C,GACH,OAAO,2BACFoB,GADL,IAEE/D,SAAS,EACT0F,MAAO1B,EAAOE,UAElB,KAAKtB,GACH,MAAO,CACL5C,SAAS,EACTqE,MAAOL,EAAOE,SAGlB,QACE,OAAOH,ID/BX8B,gBCmC6B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIC,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKpB,GACH,MAAO,CACL7C,SAAS,GAEb,KAAK8C,GACH,MAAO,CACL9C,SAAS,EACTsF,SAAS,GAEb,KAAKvC,GACH,MAAO,CACL/C,SAAS,EACTqE,MAAOL,EAAOE,SAElB,KAAKlB,GACH,MAAO,GACT,QACE,OAAOe,IDrDX+B,mBCyDgC,WAAqC,IAApC/B,EAAmC,uDAA3B,CAAEgC,OAAQ,IAAM/B,EAAW,uCACpE,OAAQA,EAAOC,MACb,KAAKhB,GACH,OAAO,2BACFc,GADL,IAEE/D,SAAS,IAEb,KAAKkD,GACH,OAAO,2BACFa,GADL,IAEE/D,SAAS,EACT+F,OAAQ/B,EAAOE,UAEnB,KAAKf,GACH,OAAO,2BACFY,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKd,GACH,OAAO,2BACFW,GADL,IAEEgC,OAAQ,KAEZ,QACE,OAAOhC,IDjFXiC,kBFkI+B,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIC,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKnC,GACH,MAAO,CACL9B,SAAS,GAEb,KAAK+B,GACH,MAAO,CACL/B,SAAS,EACTsF,SAAS,GAEb,KAAKtD,GACH,MAAO,CACLhC,SAAS,EACTqE,MAAOL,EAAOE,SAElB,QACE,OAAOH,IElJXkC,kBFsJ+B,WAAmC,IAAlClC,EAAiC,uDAAzB,CAAEqB,KAAM,IAAMpB,EAAW,uCACjE,OAAQA,EAAOC,MACb,KAAKhC,GACH,MAAO,CACLjC,SAAS,GAEb,KAAKkC,GACH,MAAO,CACLlC,SAAS,EACTsF,SAAS,GAEb,KAAKnD,GACH,MAAO,CACLnC,SAAS,EACTqE,MAAOL,EAAOE,SAElB,KAAK9B,GACH,MAAO,CACLgD,KAAM,IAEV,QACE,OAAOrB,IE1KXmC,qBN4CkC,WAAyB,IAAxBnC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKrF,EACH,OAAO,2BACFmF,GADL,IAEE/D,SAAS,IAEb,KAAKnB,EACH,OAAO,2BACFkF,GADL,IAEE/D,SAAS,EACTsF,SAAS,IAEb,KAAKxG,EACH,OAAO,2BACFiF,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,QACE,OAAOH,IM/DXoC,qBNmEkC,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIC,EAAW,uCAC1D,OAAQA,EAAOC,MACb,KAAKlF,EACH,OAAO,2BACFgF,GADL,IAEE/D,SAAS,IAEb,KAAKhB,EACH,OAAO,2BACF+E,GADL,IAEE/D,SAAS,EACTsF,SAAS,EACTpF,QAAS8D,EAAOE,UAEpB,KAAKjF,EACH,OAAO,2BACF8E,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKhF,EACH,MAAO,GACT,QACE,OAAO6E,IMzFXqC,qBN6FkC,WAAsC,IAArCrC,EAAoC,uDAA5B,CAAE7D,QAAS,IAAM8D,EAAW,uCACvE,OAAQA,EAAOC,MACb,KAAK9E,EACH,OAAO,2BACF4E,GADL,IAEE/D,SAAS,IAEb,KAAKZ,EACH,OAAO,2BACF2E,GADL,IAEE/D,SAAS,EACTsF,SAAS,EACTpF,QAAS8D,EAAOE,UAEpB,KAAK7E,EACH,OAAO,2BACF0E,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAK5E,EACH,MAAO,CACLY,QAAS,IAEb,QACE,OAAO6D,IMrHXsC,iBCgF8B,WAAqC,IAApCtC,EAAmC,uDAA3B,CAAEgC,OAAQ,IAAM/B,EAAW,uCAClE,OAAQA,EAAOC,MACb,KAAKZ,GACH,OAAO,2BACFU,GADL,IAEE/D,SAAS,IAEb,KAAKsD,GACH,OAAO,2BACFS,GADL,IAEE/D,SAAS,EACT+F,OAAQ/B,EAAOE,UAEnB,KAAKX,GACH,OAAO,2BACFQ,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,QACE,OAAOH,IDnGXuC,oBCuGiC,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIC,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAKT,GACH,MAAO,CACLxD,SAAS,GAEb,KAAKyD,GACH,MAAO,CACLzD,SAAS,EACTsF,SAAS,GAEb,KAAK5B,GACH,MAAO,CACL1D,SAAS,EACTqE,MAAOL,EAAOE,SAElB,KAAKP,GACH,MAAO,GACT,QACE,OAAOI,IDzHXwC,2BNuHwC,WAAyB,IAAxBxC,EAAuB,uDAAf,GAAIC,EAAW,uCAChE,OAAQA,EAAOC,MACb,KAAK1E,EACH,OAAO,2BACFwE,GADL,IAEE/D,SAAS,IAEb,KAAKR,EACH,OAAO,2BACFuE,GADL,IAEE/D,SAAS,EACTsF,SAAS,IAEb,KAAK7F,EACH,OAAO,2BACFsE,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,KAAKxE,EACH,MAAO,GACT,QACE,OAAOqE,IM5IXyC,uBNgJoC,WAAuC,IAAtCzC,EAAqC,uDAA7B,CAAEhE,SAAU,IAAMiE,EAAW,uCAC1E,OAAQA,EAAOC,MACb,KAAKtE,EACH,OAAO,2BACFoE,GADL,IAEE/D,SAAS,IAEb,KAAKJ,EACH,OAAO,2BACFmE,GADL,IAEE/D,SAAS,EACTD,SAAUiE,EAAOE,UAErB,KAAKrE,EACH,OAAO,2BACFkE,GADL,IAEE/D,SAAS,EACTqE,MAAOL,EAAOE,UAElB,QACE,OAAOH,MMjKP0C,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAEEG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAMEI,GAAe,CACnBxC,YAAa,CACX9D,UAAWgG,GACX3B,gBAP+B4B,aAAaC,QAAQ,mBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOF3B,iBAAkB,CAAEC,SAAU6B,KAG1BE,GAAa,CAACC,KAULC,GANDC,sBACZvD,GACAmD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,iIEiC5BM,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACPvD,KAAM/C,IAH0B,EAe9BuG,IADkBxC,EAdY,EAchCD,iBAAoBC,SAIhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SArBJ,SAyBXC,KAAMC,IAAN,qBAAwBT,EAAxB,KAA+BI,GAzBpB,gBAyB1BM,EAzB0B,EAyB1BA,KAERT,EAAS,CACPvD,KAAM9C,EACN+C,QAAS+D,IA7BuB,kDAgClCT,EAAS,CACPvD,KAAM7C,GACN8C,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UArCoB,0DAAR,yD,oCCjFfC,GA9BG,WAAO,IAAD,EACQC,mBAAS,IADjB,oBACfC,EADe,KACNC,EADM,KAGlBC,EAAUC,eASd,OACE,+BACE,gBAACC,GAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACEP,EAAQQ,OACVN,EAAQO,KAAR,mBAAyBT,EAAzB,YAEAE,EAAQO,KAAKP,EAAQQ,SAASC,WAKCC,QAAM,EAArC,UACE,eAACR,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLoF,KAAK,IACLC,YAAY,qBACZC,SAAU,SAACV,GAAD,OAAOL,EAAWK,EAAEW,OAAOC,QACrCC,UAAU,oBAEZ,eAACC,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,kBAAkBF,UAAU,MAA1D,0BC6COG,GAjEA,WACb,IAAMrC,EAAWsC,cAET7E,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAMR,OACE,kCACE,eAAC+E,GAAA,EAAD,CAAQC,GAAG,OAAOL,QAAQ,OAAOM,OAAO,KAAKC,kBAAgB,EAA7D,SACE,gBAACC,GAAA,EAAD,WACE,eAAC,iBAAD,CAAeC,GAAG,IAAlB,SACE,eAACL,GAAA,EAAOM,MAAR,yBAEF,eAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,gBAACR,GAAA,EAAOS,SAAR,CAAiBlD,GAAG,mBAApB,UACE,eAAC,GAAD,IACA,gBAACmD,GAAA,EAAD,CAAKhB,UAAU,UAAf,UACE,eAAC,iBAAD,CAAeW,GAAG,QAAlB,SACE,gBAACK,GAAA,EAAIC,KAAL,WACE,oBAAGjB,UAAU,yBADf,YAKDzE,EACC,gBAAC2F,GAAA,EAAD,CAAaC,MAAO5F,EAASoE,KAAM9B,GAAG,WAAtC,UACE,eAAC,iBAAD,CAAe8C,GAAG,WAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,wBAEF,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QA1BZ,WACpBvD,GFqDwB,SAACA,GAC3Bd,aAAasE,WAAW,YACxBxD,EAAS,CAAEvD,KAAMnD,IACjB0G,EAAS,CAAEvD,KAAM5C,KACjBmG,EAAS,CAAEvD,KAAMb,KACjBoE,EAAS,CAAEvD,KAAMpC,KACjB2F,EAAS,CAAEvD,KAAMvE,QElCD,uBAKF,eAAC,iBAAD,CAAe2K,GAAG,SAAlB,SACE,gBAACK,GAAA,EAAIC,KAAL,WACE,oBAAGjB,UAAU,gBADf,aAKHzE,GAAYA,EAASgG,SACpB,gBAACL,GAAA,EAAD,CAAaC,MAAM,QAAQtD,GAAG,YAA9B,UACE,eAAC,iBAAD,CAAe8C,GAAG,kBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,qBAGF,eAAC,iBAAD,CAAeT,GAAG,qBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,wBAGF,eAAC,iBAAD,CAAeT,GAAG,mBAAlB,SACE,eAACO,GAAA,EAAYE,KAAb,wC,mBC7CLI,GAZA,WACb,OACE,kCACE,eAACd,GAAA,EAAD,UACE,eAACe,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAK1B,UAAU,mBAAf,4C,UC+DK2B,GAtEA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAChC,OACE,uBAAK9B,UAAU,SAAf,UACE,gCACE,oBACE+B,MAAO,CAAED,SACT9B,UACE4B,GAAU,EACN,cACAA,GAAU,GACV,uBACA,kBAIV,gCACE,oBACEG,MAAO,CAAED,SACT9B,UACE4B,GAAU,EACN,cACAA,GAAU,IACV,uBACA,kBAIV,gCACE,oBACEG,MAAO,CAAED,SACT9B,UACE4B,GAAU,EACN,cACAA,GAAU,IACV,uBACA,kBAIV,gCACE,oBACEG,MAAO,CAAED,SACT9B,UACE4B,GAAU,EACN,cACAA,GAAU,IACV,uBACA,kBAIV,gCACE,oBACEG,MAAO,CAAED,SACT9B,UACE4B,GAAU,EACN,cACAA,GAAU,IACV,uBACA,kBAKV,uBAAM5B,UAAU,OAAhB,SAAwB6B,GAAUA,QC9BzBG,GA9BC,SAAC,GAAiB,IAAfxL,EAAc,EAAdA,QACjB,OACE,gBAACyL,GAAA,EAAD,CAAMjC,UAAU,mBAAhB,UAEE,eAAC,QAAD,CAAMW,GAAE,mBAAcnK,EAAQ0L,KAA9B,SACE,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAK5L,EAAQ6L,UAEzB,gBAACJ,GAAA,EAAKK,KAAN,WACE,eAAC,QAAD,CAAM3B,GAAE,mBAAcnK,EAAQ0L,KAA9B,SACE,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACE,kCAAShM,EAAQmJ,WAGrB,eAACsC,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACE,sBAAKxC,UAAU,OAAf,SAEE,eAAC,GAAD,CACE4B,OAAQpL,EAAQoL,OAChBC,OAAM,UAAKrL,EAAQkM,WAAb,YACNZ,MAAO,gBAKb,gBAACG,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,cAAqBhM,EAAQmM,gBCHxBC,GAAe,eAAC/D,EAAD,uDAAW,GAAX,gDAAkB,WAAOf,GAAP,kBAAAE,EAAA,sEAE1CF,EAAS,CAAEvD,KAAM3F,IAFyB,SAMnByJ,KAAMC,IAAN,wBAA2BO,IANR,gBAMlCN,EANkC,EAMlCA,KAERT,EAAS,CACPvD,KAAM1F,EACN2F,QAAS+D,IAV+B,gDAa1CT,EAAS,CACPvD,KAAMzF,EACN0F,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlB4B,yDAAlB,uDAuBfmE,GAAoB,SAAChF,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAErCF,EAAS,CAAEvD,KAAMxF,IAFoB,SAGdsJ,KAAMC,IAAN,wBAA2BT,EAA3B,MAHc,gBAG7BU,EAH6B,EAG7BA,KAERT,EAAS,CACPvD,KAAMvF,EACNwF,QAAS+D,IAP0B,gDAWrCT,EAAS,CACPvD,KAAMtF,EACNuF,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAhBuB,yDAAR,uD,UC7BlBoE,GAjBA,WACb,OACE,eAACC,GAAA,EAAD,CACEC,UAAU,SACVC,KAAK,SACLlB,MAAO,CACLmB,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAPb,SAUE,uBAAMrD,UAAU,UAAhB,2B,UCRSsD,GAJC,SAAC,GAA2B,IAAzBpD,EAAwB,EAAxBA,QAASqD,EAAe,EAAfA,SAC1B,OAAO,eAACC,GAAA,EAAD,CAAOtD,QAASA,EAAhB,SAA0BqD,K,UC0BpBE,GAzBE,SAAC,GAAoD,IAAlDhJ,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,MAA2C,IAApCmE,eAAoC,MAA1B,GAA0B,MAAtB0C,eAAsB,SAKnE,OAJI1C,IACFA,EAAUA,EAAQ6E,MAAM,YAAY,GAAGA,MAAM,KAAK,IAIlDhJ,EAAQ,GACN,eAACiJ,GAAA,EAAD,UACG,YAAIC,MAAMlJ,GAAOmJ,QAAQ3I,KAAI,SAAC4I,GAAD,OAC5B,eAAC,iBAAD,CAEEnD,GACGY,EAAD,qCAEkC1C,EAFlC,iBAEkDiF,EAAI,GAFtD,mBACgBjF,EADhB,iBACgCiF,EAAI,GAJxC,SAQE,eAACH,GAAA,EAAWvC,KAAZ,CAAiB2C,OAAQD,EAAI,IAAMrJ,EAAnC,SAA0CqJ,EAAI,KAPzCA,EAAI,S,oBCwBNE,GA9BS,WACtB,IAAMlG,EAAWsC,cAEX6D,EAAkB5D,aAAY,SAAChG,GAAD,OAAWA,EAAMyC,0BAC7CnC,EAA6BsJ,EAA7BtJ,MAAOrE,EAAsB2N,EAAtB3N,QAASD,EAAa4N,EAAb5N,SAIxB,OAFA6N,qBAAU,kBAAMpG,EJsMa,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAEjCF,EAAS,CAAEvD,KAAMtE,IAFgB,SAMVoI,KAAMC,IAAN,sBANU,gBAMzBC,EANyB,EAMzBA,KAERT,EAAS,CACPvD,KAAMrE,EACNsE,QAAS+D,IAVsB,gDAajCT,EAAS,CACPvD,KAAMpE,EACNqE,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlBmB,yDAAN,yDItMgB,CAACZ,IAEvCxH,EACL,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,eAACwJ,GAAA,EAAD,CAAUC,MAAM,QAAQpE,UAAU,UAAlC,SACG3J,EAAS6E,KAAI,SAAC1E,GAAD,OACZ,eAAC2N,GAAA,EAAS/C,KAAV,UACE,gBAAC,QAAD,CAAMT,GAAE,mBAAcnK,EAAQ0L,KAA9B,UACE,eAACmC,GAAA,EAAD,CAAOjC,IAAK5L,EAAQ6L,MAAOiC,IAAK9N,EAAQmJ,KAAM4E,OAAK,IACnD,eAACJ,GAAA,EAASK,QAAV,CAAkBxE,UAAU,mBAA5B,SACE,gCACGxJ,EAAQmJ,KADX,MACoBnJ,EAAQmM,MAD5B,aAJcnM,EAAQ0L,WCiDrBuC,GA3DI,SAAC,GAAiB,IAAf1F,EAAc,EAAdA,QAmBdjB,EAAWsC,cAGXsE,EAAcrE,aAAY,SAAChG,GAAD,OAAWA,EAAMD,sBACzCO,EAA0C+J,EAA1C/J,MAAOrE,EAAmCoO,EAAnCpO,QAASD,EAA0BqO,EAA1BrO,SAAUoE,EAAgBiK,EAAhBjK,KAAMC,EAAUgK,EAAVhK,MAGpCmE,EAAUE,EAAQQ,SAASoF,OAO/B,OAJAT,qBAAU,WACRpG,EAAS8E,GAAa/D,MACrB,CAACf,EAAUe,IAGZ,kCACIA,GAAW,eAAC,GAAD,IACb,kDACCvI,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IACL,IAApBtE,EAASuO,OACX,eAAC,GAAD,CAAS1E,QAAQ,OAAjB,8BAEA,iCACE,eAACuB,GAAA,EAAD,UACGpL,EAAS6E,KAAI,SAAC1E,GAAD,OACZ,eAACkL,GAAA,EAAD,CAAuBmD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACE,eAAC,GAAD,CAASxO,QAASA,KADVA,EAAQ0L,UAKtB,eAAC,GAAD,CAAUzH,KAAMA,EAAMC,MAAOA,EAAOmE,QAASA,W,8BCsMxCoG,GA9OO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOnG,EAAc,EAAdA,QAAc,EAiBtBH,mBAAS,GAjBa,oBAiBrCuG,EAjBqC,KAiBhCC,EAjBgC,OAkBhBxG,mBAAS,GAlBO,oBAkBrCgD,EAlBqC,KAkB7ByD,EAlB6B,OAmBdzG,mBAAS,IAnBK,oBAmBrC0G,EAnBqC,KAmB5BC,EAnB4B,KAqBtCzH,EAAWsC,cAEXoF,EAAiBnF,aAAY,SAAChG,GAAD,OAAWA,EAAMO,yBAC5CtE,EAA4BkP,EAA5BlP,QAASqE,EAAmB6K,EAAnB7K,MAAOnE,EAAYgP,EAAZhP,QAGhB+E,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAEFkK,EAAsBpF,aAC1B,SAAChG,GAAD,OAAWA,EAAMwC,8BAGR6I,EAGPD,EAHFnP,QACOqP,EAELF,EAFF9K,MACSiL,EACPH,EADF7J,QAGFsI,qBAAU,WACJ0B,IACFP,EAAU,GACVE,EAAW,IACXzH,EAAS,CAAEvD,KAAMvE,KAEnB8H,EAAS+E,GAAkBqC,EAAMW,OAAOhI,OACvC,CAACC,EAAUoH,EAAOU,IAiBrB,OACE,iCACE,eAAC,QAAD,CAAMjF,GAAG,IAAIX,UAAU,qBAAvB,qBAIC1J,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,iCACE,gBAAC8G,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAACT,GAAA,EAAD,CAAOjC,IAAK5L,EAAQ6L,MAAOiC,IAAK9N,EAAQmJ,KAAM4E,OAAK,MAErD,eAAC7C,GAAA,EAAD,CAAKoD,GAAI,EAAT,SAEE,gBAACgB,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,eAAC4F,GAAA,EAAU1E,KAAX,UACE,8BAAK5K,EAAQmJ,SAEf,eAACmG,GAAA,EAAU1E,KAAX,UACE,eAAC,GAAD,CACEQ,OAAQpL,EAAQoL,OAChBC,OAAM,UAAKrL,EAAQkM,WAAb,YACNZ,MAAO,cAGX,gBAACgE,GAAA,EAAU1E,KAAX,sBAAyB5K,EAAQmM,SACjC,gBAACmD,GAAA,EAAU1E,KAAX,2BACgB5K,EAAQuP,oBAI5B,eAACrE,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC7C,GAAA,EAAD,UACE,gBAAC6D,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,eAAC4F,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACE,wCAAUlL,EAAQmM,gBAKxB,eAACmD,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACGlL,EAAQwP,aAAe,EAAI,WAAa,sBAK9CxP,EAAQwP,aAAe,GACtB,eAACF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAK1B,UAAU,UAAf,iBACA,eAAC0B,GAAA,EAAD,CAAKuE,GAAG,OAAOjG,UAAU,OAAzB,SACE,eAACf,GAAA,EAAKS,QAAN,CACE8C,GAAG,SACHzC,MAAOoF,EACPtF,SAAU,SAACV,GACTiG,EAAOjG,EAAEW,OAAOC,QAJpB,SAOG,YAAI6D,MAAMpN,EAAQwP,cAAcnC,QAAQ3I,KACvC,SAACgL,GAAD,OACE,yBAEEnG,MAAOmG,EAAe,EAFxB,SAIGA,EAAe,GAHXA,EAAe,eAYpC,eAACJ,GAAA,EAAU1E,KAAX,UACE,eAACnB,GAAA,EAAD,CACEoB,QApGK,WAEvBtC,EAAQO,KAAR,gBAAsB4F,EAAMW,OAAOhI,GAAnC,gBAA6CsH,KAmG3BnF,UAAU,YACVzF,KAAK,SACL4L,SAAmC,IAAzB3P,EAAQwP,aAJpB,qCAcV,eAACvE,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,UACE,0CAC4B,IAA3BtO,EAAQC,QAAQmO,QACf,eAAC,GAAD,CAAS1E,QAAQ,OAAjB,wBAEF,gBAAC4F,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACG1J,EAAQC,QAAQyE,KAAI,SAAC2G,GAAD,OACnB,gBAACiE,GAAA,EAAU1E,KAAX,WACE,kCAASS,EAAOlC,OAChB,eAAC,GAAD,CAAQiC,OAAQC,EAAOD,OAAQE,MAAM,YACrC,6BAAIsE,KAAOvE,EAAOwE,WAAWC,OAAO,kBACpC,6BAAIzE,EAAOyD,YAJQzD,EAAOK,QAQ9B,gBAAC4D,GAAA,EAAU1E,KAAX,WACE,0DAECsE,GAAwB,eAAC,GAAD,IACxBE,GACC,eAAC,GAAD,CAAS1F,QAAQ,UAAjB,2CAIDyF,GACC,eAAC,GAAD,CAASzF,QAAQ,SAAjB,SAA2ByF,IAE5BpK,EACC,gBAAC0D,GAAA,EAAD,CAAMC,SAzIF,SAACC,GNgGU,IAACoH,EAAW1E,EM/F3C1C,EAAEC,iBACFtB,GN8FgCyI,EM7FVrB,EAAMW,OAAOhI,GN6FQgE,EM7FJ,CACnCD,OAAQA,EACR0D,QAASA,GN2FkB,yCAAuB,WACxDxH,EACAC,GAFwD,wBAAAC,EAAA,sEAKtDF,EAAS,CAAEvD,KAAM1E,IALqC,EASlDkI,IADkBxC,EARgC,EAQpDD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAdgB,SAkB/BC,KAAMmI,KAAN,wBACJD,EADI,aAErB1E,EACA5D,GArBoD,gBAkB9CM,EAlB8C,EAkB9CA,KAMRT,EAAS,CACPvD,KAAMzE,EACN0E,QAAS+D,IA1B2C,kDA6BtDT,EAAS,CACPvD,KAAMxE,EACNyE,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlCwC,0DAAvB,2DMyCf,UACE,gBAACO,GAAA,EAAKwH,MAAN,CAAYC,UAAU,SAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,qBACA,gBAAC1H,GAAA,EAAKS,QAAN,CACE8C,GAAG,SACHzC,MAAO6B,EACP/B,SAAU,SAACV,GAAD,OAAOkG,EAAUlG,EAAEW,OAAOC,QAHtC,UAKE,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAIJ,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,qBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE8C,GAAG,WACHoE,KAAM,EACN7G,MAAOuF,EACPzF,SAAU,SAACV,GAAD,OAAOoG,EAAWpG,EAAEW,OAAOC,aAGzC,eAACE,GAAA,EAAD,CACE1F,KAAK,SACL2F,QAAQ,UACRiG,SAAUT,EAHZ,uBASF,gBAAC,GAAD,CAASxF,QAAQ,OAAjB,oBACS,eAAC,QAAD,CAAMS,GAAG,SAAT,mBADT,0CCjPPkG,GAAY,SAAChJ,EAAIsH,GAAL,gDAAa,WAAOrH,EAAUC,GAAjB,kBAAAC,EAAA,sEACbK,KAAMC,IAAN,wBAA2BT,IADd,gBAC5BU,EAD4B,EAC5BA,KAERT,EAAS,CACPvD,KAAM7D,EACN8D,QAAS,CACPhE,QAAS+H,EAAK2D,IACdvC,KAAMpB,EAAKoB,KACX0C,MAAO9D,EAAK8D,MACZM,MAAOpE,EAAKoE,MACZqD,aAAczH,EAAKyH,aACnBb,SAMJnI,aAAa8J,QACX,YACA5J,KAAK6J,UAAUhJ,IAAWlD,YAAY9D,YAnBJ,2CAAb,yDCuIViQ,GAhII,SAAC,GAAkC,IAAhC9B,EAA+B,EAA/BA,MAAO3F,EAAwB,EAAxBA,SAAUR,EAAc,EAAdA,QAC/BwH,EAAYrB,EAAMW,OAAOhI,GAEzBsH,EAAM5F,EAASoF,OAASsC,OAAO1H,EAASoF,OAAOjB,MAAM,KAAK,IAAM,EAEhE5F,EAAWsC,cAGjB8D,qBAAU,WACJqC,GACFzI,EAAS+I,GAAUN,EAAWpB,MAE/B,CAACrH,EAAUyI,EAAWpB,IAEzB,IAAM+B,EAAwB,SAACrJ,GAC7BC,EDC0B,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,UAAAC,EAAA,sDACpCF,EAAS,CACPvD,KAAM5D,EACN6D,QAASqD,IAGXb,aAAa8J,QACX,YACA5J,KAAK6J,UAAUhJ,IAAWlD,YAAY9D,YARJ,2CAAR,wDCDjBoQ,CAAetJ,KAIlB9G,EADKsJ,aAAY,SAAChG,GAAD,OAAWA,EAAMQ,eAClC9D,UAOR,OACE,gBAAC0K,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,UACE,gDACsB,IAArB/N,EAAU6N,OACT,gBAAC,GAAD,CAAS1E,QAAQ,OAAjB,gCACqB,eAAC,QAAD,CAAMS,GAAG,IAAT,wBAGrB,eAACmF,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,SACGnJ,EAAUmE,KAAI,SAACD,GAAD,OACb,eAAC6K,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAACT,GAAA,EAAD,CACEjC,IAAKnH,EAASoH,MACdiC,IAAKrJ,EAAS0E,KACd4E,OAAK,EACL6C,SAAO,MAGX,eAAC1F,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC,QAAD,CAAMnE,GAAE,oBAAe1F,EAASzE,SAAhC,SACGyE,EAAS0E,SAGd,gBAAC+B,GAAA,EAAD,CAAKoD,GAAI,EAAT,cAAc7J,EAAS0H,SACvB,eAACjB,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC7F,GAAA,EAAKS,QAAN,CACE8C,GAAG,SACHzC,MAAO9E,EAASkK,IAChBtF,SAAU,SAACV,GACTrB,EACE+I,GAAU5L,EAASzE,QAASyQ,OAAO9H,EAAEW,OAAOC,UALlD,SASG,YAAI6D,MAAM3I,EAAS+K,cAAcnC,QAAQ3I,KACxC,SAACgL,GAAD,OACE,yBAEEnG,MAAOmG,EAAe,EAFxB,SAIGA,EAAe,GAHXA,EAAe,UAS9B,eAACxE,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC7E,GAAA,EAAD,CACE1F,KAAK,SACL2F,QAAQ,QACRmB,QAAS,kBAAM6F,EAAsBjM,EAASzE,UAHhD,SAKE,oBAAGwJ,UAAU,yBA5CA/E,EAASzE,iBAqDtC,eAACkL,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC7C,GAAA,EAAD,UACE,gBAAC6D,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,gBAAC4F,GAAA,EAAU1E,KAAX,WACE,2CACW,IACRrK,EAAUsQ,QACT,SAACC,EAAarM,GAAd,OAA2BqM,EAAcrM,EAASkK,MAClD,GACC,IALL,WADF,IAUGpO,EACEsQ,QACC,SAACC,EAAarM,GAAd,OACEqM,EAAcrM,EAASkK,IAAMlK,EAAS0H,QACxC,GAED4E,QAAQ,MAEb,eAACzB,GAAA,EAAU1E,KAAX,UACE,eAACnB,GAAA,EAAD,CACE1F,KAAK,SACLyF,UAAU,YACVmG,SAA+B,IAArBpP,EAAU6N,OACpBvD,QA9FU,WACtBtC,EAAQO,KAAK,6BAyFH,8CCjHCkI,GAZO,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SACvB,OACE,eAAC7C,GAAA,EAAD,UACE,eAACe,GAAA,EAAD,CAAKzB,UAAU,4BAAf,SACE,eAAC0B,GAAA,EAAD,CAAKuE,GAAI,GAAInB,GAAI,EAAjB,SACGvB,SCsEIkE,GApEK,SAAC,GAA2B,IAAzBlI,EAAwB,EAAxBA,SAAUR,EAAc,EAAdA,QAAc,EACnBH,mBAAS,IADU,oBACtC8I,EADsC,KAC/BC,EAD+B,OAEb/I,mBAAS,IAFI,oBAEtCgJ,EAFsC,KAE5BC,EAF4B,KAGvC/J,EAAWsC,cACX0H,EAAWvI,EAASoF,OAASpF,EAASoF,OAAOjB,MAAM,KAAK,GAAK,IAE7DqE,EAAY1H,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBAEvCX,EAA6BoN,EAA7BpN,MAAOrE,EAAsByR,EAAtBzR,QAASiF,EAAawM,EAAbxM,SAGxB2I,qBAAU,WACJ3I,GACFwD,EAAQO,KAAKwI,KAEd,CAAC/I,EAASxD,EAAUuM,IAOvB,OACE,gBAAC,GAAD,WACE,0CACCxR,GAAW,eAAC,GAAD,IACXqE,GAAS,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IACrC,gBAACsE,GAAA,EAAD,CAAMC,SAVY,SAACC,GACrBA,EAAEC,iBACFtB,EhBEiB,SAAC4J,EAAOE,GAAR,gDAAqB,WAAO9J,GAAP,oBAAAE,EAAA,sEAEtCF,EAAS,CACPvD,KAAMtD,IAGFgH,EAAS,CACbC,QAAS,CAAE,eAAgB,qBAPS,SAWfG,KAAMmI,KAC3B,oBACA,CAAEwB,SAAUN,EAAOE,SAAUA,GAC7B3J,GAdoC,gBAW9BM,EAX8B,EAW9BA,KAMRT,EAAS,CACPvD,KAAMrD,EACNsD,QAAS+D,IAIXvB,aAAa8J,QAAQ,WAAY5J,KAAK6J,UAAUxI,IAvBV,kDAyBtCT,EAAS,CACPvD,KAAMpD,EACNqD,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA9BwB,0DAArB,sDgBFRuJ,CAAMP,EAAOE,KAQpB,UACE,gBAAC3I,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,QACLqF,YAAY,cACZG,MAAO2H,EACP7H,SAAU,SAACV,GACTwI,EAASxI,EAAEW,OAAOC,aAKxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,WACLqF,YAAY,iBACZG,MAAO6H,EACP/H,SAAU,SAACV,GACT0I,EAAY1I,EAAEW,OAAOC,aAI3B,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,wBAKF,eAACuB,GAAA,EAAD,CAAKzB,UAAU,OAAf,SACE,gBAAC0B,GAAA,EAAD,2BACgB,IACd,eAAC,QAAD,CAAMf,GAAImH,EAAQ,6BAAyBA,GAAa,YAAxD,+BC8CKI,GAzGQ,SAAC,GAA2B,IAAzB3I,EAAwB,EAAxBA,SAAUR,EAAc,EAAdA,QAAc,EACxBH,mBAAS,IADe,oBACzCe,EADyC,KACnCwI,EADmC,OAEtBvJ,mBAAS,IAFa,oBAEzC8I,EAFyC,KAElCC,EAFkC,OAGhB/I,mBAAS,IAHO,oBAGzCgJ,EAHyC,KAG/BC,EAH+B,OAIFjJ,mBAAS,IAJP,oBAIzCwJ,EAJyC,KAIxBC,EAJwB,OAKlBzJ,mBAAS,IALS,oBAKzCF,EALyC,KAKhC4J,EALgC,KAM1CxK,EAAWsC,cACX0H,EAAWvI,EAASoF,OAASpF,EAASoF,OAAOjB,MAAM,KAAK,GAAK,IAE7D6E,EAAelI,aAAY,SAAChG,GAAD,OAAWA,EAAMmB,uBAE1Cb,EAA6B4N,EAA7B5N,MAAOrE,EAAsBiS,EAAtBjS,QAASiF,EAAagN,EAAbhN,SAGxB2I,qBAAU,WACJ3I,GACFwD,EAAQO,KAAKwI,KAEd,CAAC/I,EAASxD,EAAUuM,IAWvB,OACE,gBAAC,GAAD,WACE,0CACCpJ,GAAW,eAAC,GAAD,CAASwB,QAAQ,SAAjB,SAA2BxB,IACtCpI,GAAW,eAAC,GAAD,IACXqE,GAAS,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IACrC,gBAACsE,GAAA,EAAD,CAAMC,SAfY,SAACC,GACrBA,EAAEC,iBACEwI,IAAaQ,EACfE,EAAW,0BAEXxK,EjBwCkB,SAAC6B,EAAM+H,EAAOE,GAAd,gDAA2B,WACjD9J,EACAC,GAFiD,oBAAAC,EAAA,sEAK/CF,EAAS,CACPvD,KAAMlD,IAGF4G,EAAS,CACbC,QAAS,CAAE,eAAgB,qBAVkB,SAYxBG,KAAMmI,KAC3B,uBACA,CAAE7G,KAAMA,EAAM+H,MAAOA,EAAOE,SAAUA,GACtC3J,GAf6C,gBAYvCM,EAZuC,EAYvCA,KAMRT,EAAS,CACPvD,KAAMjD,EACNkD,QAAS+D,IAGXT,EAAS,CACPvD,KAAMrD,EACNsD,QAAS+D,IAIXvB,aAAa8J,QAAQ,WAAY5J,KAAK6J,UAAUxI,IA7BD,kDA+B/CT,EAAS,CACPvD,KAAMhD,EACNiD,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UApCiC,0DAA3B,wDiBxCT8J,CAAS7I,EAAM+H,EAAOE,KAU/B,UACE,gBAAC3I,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GACTgJ,EAAQhJ,EAAEW,OAAOC,aAKvB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,QACLqF,YAAY,cACZG,MAAO2H,EACP7H,SAAU,SAACV,GACTwI,EAASxI,EAAEW,OAAOC,aAKxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,WACLqF,YAAY,iBACZG,MAAO6H,EACP/H,SAAU,SAACV,GACT0I,EAAY1I,EAAEW,OAAOC,aAK3B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mCACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,WACLqF,YAAY,uBACZG,MAAOqI,EACPvI,SAAU,SAACV,GACTkJ,EAAmBlJ,EAAEW,OAAOC,aAKlC,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,yBAKF,eAACuB,GAAA,EAAD,CAAKzB,UAAU,OAAf,SACE,gBAAC0B,GAAA,EAAD,8BACmB,IACjB,eAAC,QAAD,CAAMf,GAAImH,EAAQ,0BAAsBA,GAAa,SAArD,8B,UC+EKY,GA5KO,SAAC,GAAiB,IAAf3J,EAAc,EAAdA,QAAc,EACbH,mBAAS,IADI,oBAC9Be,EAD8B,KACxBwI,EADwB,OAEXvJ,mBAAS,IAFE,oBAE9B8I,EAF8B,KAEvBC,EAFuB,OAGL/I,mBAAS,IAHJ,oBAG9BgJ,EAH8B,KAGpBC,EAHoB,OAISjJ,mBAAS,IAJlB,oBAI9BwJ,EAJ8B,KAIbC,EAJa,OAKPzJ,mBAAS,IALF,oBAK9BF,EAL8B,KAKrB4J,EALqB,KAM/BxK,EAAWsC,cAEXuI,EAActI,aAAY,SAAChG,GAAD,OAAWA,EAAMoB,sBACzCd,EAAyBgO,EAAzBhO,MAAOrE,EAAkBqS,EAAlBrS,QAASoF,EAASiN,EAATjN,KAGhBH,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAKAK,EAHkByE,aACxB,SAAChG,GAAD,OAAWA,EAAMsB,4BAEXC,QAEFgN,EAAcvI,aAAY,SAAChG,GAAD,OAAWA,EAAM+B,sBAChCyM,EAA8CD,EAAvDtS,QAA+BwS,EAAwBF,EAA/BjO,MAAoB0B,EAAWuM,EAAXvM,OAEpD6H,qBAAU,WACH3I,GAIEG,GAASA,EAAKiE,OAAQ/D,GAAWL,EAAS2G,MAAQxG,EAAKwG,KAK1DiG,EAAQzM,EAAKiE,MACbgI,EAASjM,EAAKgM,SALd5J,EAAS,CAAEvD,KAAMxC,KACjB+F,EAASF,GAAe,aAM1BE,EC0FsB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACPvD,KAAMhB,KAHsB,EAQ1BwE,IADkBxC,EAPQ,EAO5BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbR,SAiBPC,KAAMC,IAAN,wBAAmCL,GAjB5B,gBAiBtBM,EAjBsB,EAiBtBA,KAERT,EAAS,CACPvD,KAAMf,GACNgB,QAAS+D,IArBmB,kDAwB9BT,EAAS,CACPvD,KAAMd,GACNe,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA7BgB,0DAAN,0DDrGtBK,EAAQO,KAAK,YAad,CAACxB,EAAUiB,EAASxD,EAAUG,EAAME,IAmBvC,OACE,gBAAC6F,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,UACE,+CACCpG,GAAW,eAAC,GAAD,CAASwB,QAAQ,SAAjB,SAA2BxB,IACtCpI,GAAW,eAAC,GAAD,IACXqE,GAAS,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IACrC,gBAACsE,GAAA,EAAD,CAAMC,SAxBU,SAACC,GACrBA,EAAEC,iBACEwI,IAAaQ,EACfE,EAAW,2BAEXxK,ElBqG2B,SAACpC,GAAD,gDAAU,WAAOoC,EAAUC,GAAjB,wBAAAC,EAAA,sEAEvCF,EAAS,CACPvD,KAAM3C,KAH+B,EAQnCmG,IADkBxC,EAPiB,EAOrCD,iBAAoBC,SAIhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAdC,SAkBhBC,KAAM0K,IAAN,6BAErBrN,EACAuC,GArBqC,gBAkB/BM,EAlB+B,EAkB/BA,KAMRT,EAAS,CACPvD,KAAM1C,GACN2C,QAAS+D,IAGXT,EAAS,CACPvD,KAAMrD,EACNsD,QAAS+D,IAGXvB,aAAa8J,QAAQ,WAAY5J,KAAK6J,UAAUxI,IAlCT,kDAoCvCT,EAAS,CACPvD,KAAMzC,GACN0C,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAzCyB,0DAAV,wDkBpGzBsK,CAAkB,CAChBnL,GAAInC,EAAKwG,IACTvC,KAAMA,EACN+H,MAAOA,EACPE,SAAUA,KAGdU,EAAW,MAWT,UACE,gBAACrJ,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GACTgJ,EAAQhJ,EAAEW,OAAOC,aAKvB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,QACLqF,YAAY,cACZG,MAAO2H,EACP7H,SAAU,SAACV,GACTwI,EAASxI,EAAEW,OAAOC,aAKxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,WACLqF,YAAY,iBACZG,MAAO6H,EACP/H,SAAU,SAACV,GACT0I,EAAY1I,EAAEW,OAAOC,aAK3B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,kBAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mCACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,WACLqF,YAAY,uBACZG,MAAOqI,EACPvI,SAAU,SAACV,GACTkJ,EAAmBlJ,EAAEW,OAAOC,aAKlC,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,0BAKJ,gBAACwB,GAAA,EAAD,CAAKoD,GAAI,EAAT,UACE,4CACC+D,EACC,eAAC,GAAD,IACEC,EACF,eAAC,GAAD,CAAS5I,QAAQ,SAAjB,SAA2B4I,IAE3B,gBAACG,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACnJ,UAAU,WAApC,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACG3D,EAAOnB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAMkG,MACX,8BAAKkE,KAAOpK,EAAMqK,WAAWC,OAAO,kBACpC,oCAAMtK,EAAMoN,cACZ,8BACGpN,EAAMqN,OACLjD,KAAOpK,EAAMsN,QAAQhD,OAAO,gBAE5B,oBAAGtG,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAGhD,8BACG9F,EAAMuN,YACLnD,KAAOpK,EAAMwN,aAAalD,OAAO,gBAEjC,oBAAGtG,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAGhD,8BACE,eAAC,iBAAD,CAAenB,GAAE,iBAAY3E,EAAMkG,KAAnC,SACE,eAACjC,GAAA,EAAD,CAAQD,UAAU,SAAlB,2BApBGhE,EAAMkG,oBEzGhBuH,GA3CO,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5C,OACE,gBAAC7I,GAAA,EAAD,CAAKhB,UAAU,8BAAf,UACE,eAACgB,GAAA,EAAII,KAAL,UACGsI,EACC,eAAC,iBAAD,CAAe/I,GAAG,SAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,sBAGF,eAACD,GAAA,EAAIC,KAAL,CAAUkF,UAAQ,EAAlB,qBAGJ,eAACnF,GAAA,EAAII,KAAL,UACGuI,EACC,eAAC,iBAAD,CAAehJ,GAAG,YAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,yBAGF,eAACD,GAAA,EAAIC,KAAL,CAAUkF,UAAQ,EAAlB,wBAGJ,eAACnF,GAAA,EAAII,KAAL,UACGwI,EACC,eAAC,iBAAD,CAAejJ,GAAG,WAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,wBAGF,eAACD,GAAA,EAAIC,KAAL,CAAUkF,UAAQ,EAAlB,uBAGJ,eAACnF,GAAA,EAAII,KAAL,UACGyI,EACC,eAAC,iBAAD,CAAelJ,GAAG,cAAlB,SACE,eAACK,GAAA,EAAIC,KAAL,4BAGF,eAACD,GAAA,EAAIC,KAAL,CAAUkF,UAAQ,EAAlB,+BC2DK2D,GA3FQ,SAAC,GAAiB,IAAf/K,EAAc,EAAdA,QAEhB3D,EADKiF,aAAY,SAAChG,GAAD,OAAWA,EAAMQ,eAClCO,gBAEF0C,EAAWsC,cAJqB,EAMRxB,mBAASxD,EAAgB2O,SANjB,oBAM/BA,EAN+B,KAMtBC,EANsB,OAOdpL,mBAASxD,EAAgB6O,MAPX,oBAO/BA,EAP+B,KAOzBC,EAPyB,OAQZtL,mBAASxD,EAAgBf,OARb,oBAQ/BA,EAR+B,KAQxB8P,EARwB,OASNvL,mBAASxD,EAAgBgP,UATnB,oBAS/BA,EAT+B,KASrBC,EATqB,OAURzL,mBAASxD,EAAgBkP,SAVjB,oBAU/BA,EAV+B,KAUtBC,EAVsB,KAkBtC,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAeb,OAAK,EAACC,OAAK,IAC1B,2CACA,gBAAC1K,GAAA,EAAD,CAAMC,SAVY,SAACC,GRwBU,IAACqL,EQvBhCrL,EAAEC,iBACFtB,GRsBgC0M,EQtBH,CAAET,UAASE,OAAM5P,QAAO+P,WAAUE,WRsBhC,yCAAkB,WAAOxM,GAAP,UAAAE,EAAA,sDACnDF,EAAS,CACPvD,KAAM3D,EACN4D,QAASgQ,IAGXxN,aAAa8J,QAAQ,kBAAmB5J,KAAK6J,UAAUyD,IANJ,2CAAlB,wDQrB/BzL,EAAQO,KAAK,aAOX,UACE,gBAACL,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,sBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,gBACZG,MAAOgK,GAAoB,GAC3BlK,SAAU,SAACV,GACT6K,EAAW7K,EAAEW,OAAOC,aAI1B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,aACZG,MAAOkK,GAAc,GACrBpK,SAAU,SAACV,GACT+K,EAAQ/K,EAAEW,OAAOC,aAIvB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,cACZG,MAAO1F,GAAgB,GACvBwF,SAAU,SAACV,GACTgL,EAAShL,EAAEW,OAAOC,aAIxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,wBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,kBACZG,MAAOqK,GAAsB,GAC7BvK,SAAU,SAACV,GACTkL,EAAYlL,EAAEW,OAAOC,aAI3B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,sBACA,eAAC1H,GAAA,EAAKS,QAAN,CACE+I,UAAQ,EACRlO,KAAK,OACLqF,YAAY,gBACZG,MAAOuK,GAAoB,GAC3BzK,SAAU,SAACV,GACToL,EAAWpL,EAAEW,OAAOC,aAI1B,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,6BCxCOuK,GA3CO,SAAC,GAAiB,IAAf1L,EAAc,EAAdA,QAEf3D,EADKiF,aAAY,SAAChG,GAAD,OAAWA,EAAMQ,eAClCO,gBAEF0C,EAAWsC,cAJoB,EAMKxB,mBAAS,UANd,oBAM9BvD,EAN8B,KAMfqP,EANe,KAQhCtP,EAAgB2O,SACnBhL,EAAQO,KAAK,aASf,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,CAAeoK,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gBAAC3K,GAAA,EAAD,CAAMC,SATY,SAACC,GTiCQ,IAACwL,EShC9BxL,EAAEC,iBACFtB,GT+B8B6M,ES/BHtP,ET+BE,yCAAiB,WAAOyC,GAAP,UAAAE,EAAA,sDAChDF,EAAS,CACPvD,KAAM1D,EACN2D,QAASmQ,IAGX3N,aAAa8J,QAAQ,gBAAiB5J,KAAK6J,UAAU4D,IANL,2CAAjB,wDS9B7B5L,EAAQO,KAAK,gBAMX,UACE,gBAACL,GAAA,EAAKwH,MAAN,WACE,eAACxH,GAAA,EAAK0H,MAAN,CAAYnE,GAAG,SAAf,2BACA,eAACd,GAAA,EAAD,UACE,eAACzC,GAAA,EAAK2L,MAAN,CACErQ,KAAK,QACLsQ,MAAM,wBACNhN,GAAG,SACH8B,KAAK,gBACLmL,SAAO,EACPjL,SAAU,SAACV,GAAD,OAAOuL,EAAiBvL,EAAEW,OAAOC,eAIjD,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,6BC8HO6K,GA/JU,SAAC,GAAiB,IAAfhM,EAAc,EAAdA,QACpBiM,EAAc3K,aAAY,SAAChG,GAAD,OAAWA,EAAM0B,sBACzCC,EAA0BgP,EAA1BhP,MAAOrB,EAAmBqQ,EAAnBrQ,MAAOiB,EAAYoP,EAAZpP,QAEhBqP,EAAO5K,aAAY,SAAChG,GAAD,OAAWA,EAAMQ,eACpCiD,EAAWsC,cAEjB6K,EAAKC,WAAaD,EAAKlU,UACpBsQ,QAAO,SAAC8D,EAAKlQ,GAAN,OAAmBkQ,EAAMlQ,EAAS0H,MAAQ1H,EAASkK,MAAK,GAC/DoC,QAAQ,GAEX0D,EAAKG,eAAiBH,EAAKC,WAAa,IAAM,EAAI,IAAI3D,QAAQ,GAE9D0D,EAAKI,SAAWpE,OAAO,KAAQgE,EAAKC,YAAY3D,QAAQ,GAExD0D,EAAK7B,YACHnC,OAAOgE,EAAKC,YACZjE,OAAOgE,EAAKG,eACZnE,OAAOgE,EAAKI,WACZ9D,QAAQ,GAEL0D,EAAK5P,eACR0D,EAAQO,KAAK,YAGf4E,qBAAU,WACJtI,IACFmD,EAAQO,KAAR,iBAAuBtD,EAAMkG,MAE7BpE,EAAS,CACPvD,KAAMxB,QAGT,CAAC6C,EAASmD,EAASjB,IAgBtB,OACE,iCACE,eAAC,GAAD,CAAe4L,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,gBAACpI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,gBAACgB,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,gBAAC4F,GAAA,EAAU1E,KAAX,WACE,2CACA,+BACE,iDACC6J,EAAK7P,gBAAgB2O,QAFxB,KAEmCkB,EAAK7P,gBAAgB6O,KAFxD,IAE+D,IAC5DgB,EAAK7P,gBAAgBf,MAHxB,IAGgC,KAC7B4Q,EAAK7P,gBAAgBgP,SAJxB,IAImC,KAChCa,EAAK7P,gBAAgBkP,cAG1B,gBAACxE,GAAA,EAAU1E,KAAX,WACE,iDACA,+BACE,+CACC6J,EAAK5P,oBAGV,gBAACyK,GAAA,EAAU1E,KAAX,WACE,8CAC2B,IAA1B6J,EAAKlU,UAAU6N,OACd,eAAC,GAAD,CAAS1E,QAAQ,OAAjB,iCAEA,eAAC4F,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,SACG+K,EAAKlU,UAAUmE,KAAI,SAACD,EAAUqQ,GAAX,OAClB,eAACxF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAACT,GAAA,EAAD,CACEjC,IAAKnH,EAASoH,MACdiC,IAAKrJ,EAAS0E,KACd4E,OAAK,EACL6C,SAAO,MAGX,eAAC1F,GAAA,EAAD,CAAK1B,UAAU,UAAf,SACE,eAAC,QAAD,CAAMW,GAAE,mBAAc1F,EAASzE,SAA/B,SACGyE,EAAS0E,SAGd,gBAAC+B,GAAA,EAAD,CAAKoD,GAAI,EAAG9E,UAAU,UAAtB,UACG/E,EAASkK,IADZ,OACqBlK,EAAS0H,MAD9B,QAEI1H,EAASkK,IAAMlK,EAAS0H,OAAO4E,QAAQ,UAjB1B+D,gBA2BjC,eAAC5J,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAAC7C,GAAA,EAAD,UACE,gBAAC6D,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,eAAC4F,GAAA,EAAU1E,KAAX,UACE,kDAEF,eAAC0E,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAOuJ,EAAKC,mBAGhB,eAACpF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAOuJ,EAAKG,sBAGhB,eAACtF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,eAAOuJ,EAAKI,iBAGhB,eAACvF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAOuJ,EAAK7B,mBAIhB,eAACtD,GAAA,EAAU1E,KAAX,UACGzG,GAAS,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,MAGvC,eAACmL,GAAA,EAAU1E,KAAX,UACE,eAACnB,GAAA,EAAD,CACE1F,KAAK,SACLyF,UAAU,YACVmG,SAAoC,IAA1B8E,EAAKlU,UAAU6N,OACzBvD,QA/GG,WACjBvD,EJtBuB,SAAC9B,GAAD,gDAAW,WAAO8B,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACPvD,KAAM3B,KAH0B,EAQ9BmF,IADkBxC,EAPY,EAOhCD,iBAAoBC,SAIhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAdJ,SAkBXC,KAAMmI,KAAN,mBAA+BxK,EAAOiC,GAlB3B,gBAkB1BM,EAlB0B,EAkB1BA,KAERT,EAAS,CACPvD,KAAM1B,GACN2B,QAAS+D,IAEXT,EAAS,CACPvD,KAAMzD,EACN0D,QAAS+D,IAGXvB,aAAasE,WAAW,aA7BU,kDA+BlCxD,EAAS,CACPvD,KAAMzB,GACN0B,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UApCoB,0DAAX,wDIuBrB6M,CAAY,CACVrP,WAAY+O,EAAKlU,UACjBqE,gBAAiB6P,EAAK7P,gBACtBC,cAAe4P,EAAK5P,cACpB6P,WAAYD,EAAKO,WACjBJ,cAAeH,EAAKG,cACpBC,SAAUJ,EAAKI,SACfjC,WAAY6B,EAAK7B,eAkGT,yC,SC2FDqC,GAhOK,SAAC,GAAwB,IAAtBvG,EAAqB,EAArBA,MAAOnG,EAAc,EAAdA,QACtB2M,EAAUxG,EAAMW,OAAOhI,GACvBC,EAAWsC,cACXuL,EAAetL,aAAY,SAAChG,GAAD,OAAWA,EAAM4B,uBAC1CD,EAA0B2P,EAA1B3P,MAAOrB,EAAmBgR,EAAnBhR,MAAOrE,EAAYqV,EAAZrV,QAEhBsV,EAAWvL,aAAY,SAAChG,GAAD,OAAWA,EAAM8B,mBAE7B0P,EAAoCD,EAA7CtV,QAA8BwV,EAAeF,EAAxBhQ,QAEvBmQ,EAAe1L,aAAY,SAAChG,GAAD,OAAWA,EAAMuC,uBACjCoP,EAA4CD,EAArDzV,QAAkC2V,EAAmBF,EAA5BnQ,QAGzBL,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAdkC,EAgBVqD,oBAAS,GAhBC,oBAgBnCsN,EAhBmC,KAgBzBC,EAhByB,KAkBrC7V,GAAYqE,IACfqB,EAAMkP,WAAalP,EAAME,WACtBmL,QAAO,SAAC8D,EAAKiB,GAAN,OAAoBjB,EAAMiB,EAAUzJ,MAAQyJ,EAAUjH,MAAK,GAClEoC,QAAQ,IAebrD,qBAAU,WLUmB,IAACrG,EKTvBtC,GACHwD,EAAQO,KAAK,WAIZtD,GACD8P,GACA9P,EAAMkG,MAAQ+E,OAAOyE,IACrBO,GAEAnO,EAAS,CACPvD,KAAMjB,KAERwE,EAAS,CACPvD,KAAMN,KAER6D,GLP0BD,EKOD6N,ELPA,yCAAQ,WAAO5N,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACPvD,KAAMvB,KAH2B,EAQ/B+E,IADkBxC,EAPa,EAOjCD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbH,SAiBZC,KAAMC,IAAN,sBAAyBT,EAAzB,KAAgCI,GAjBpB,gBAiB3BM,EAjB2B,EAiB3BA,KAERT,EAAS,CACPvD,KAAMtB,GACNuB,QAAS+D,IArBwB,kDAwBnCT,EAAS,CACPvD,KAAMrB,GACNsB,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA7BqB,0DAAR,2DKQf1C,EAAMqN,SACXgD,OAAOC,OAGVH,GAAY,GAlCM,WACtB,IAAMI,EAASC,SAASC,cAAc,UACtCF,EAAOhS,KAAO,kBACdgS,EAAOnK,IACL,2HACFmK,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACdR,GAAY,IAEdK,SAASI,KAAKC,YAAYN,GAuBtBO,MAKH,CAAChP,EAAU9B,EAAO0P,EAASI,EAAYG,IAU1C,OAAO3V,EACL,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,iCACE,0CAAYqB,EAAMkG,OAClB,gBAACT,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,gBAACgB,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,gBAAC4F,GAAA,EAAU1E,KAAX,WACE,2CACA,+BACE,6CADF,IAC2BpF,EAAMN,KAAKiE,QAEtC,+BACE,8CACA,oBAAGoN,KAAI,iBAAY/Q,EAAMN,KAAKgM,OAA9B,SAAwC1L,EAAMN,KAAKgM,WAErD,+BACE,iDACC1L,EAAMZ,gBAAgB2O,QAFzB,KAEoC/N,EAAMZ,gBAAgB6O,KAF1D,IAEiE,IAC9DjO,EAAMZ,gBAAgBf,MAHzB,IAGiC,KAC9B2B,EAAMZ,gBAAgBgP,SAJzB,IAIoC,KACjCpO,EAAMZ,gBAAgBkP,WAGxBtO,EAAMuN,YACL,gBAAC,GAAD,CAASrJ,QAAQ,UAAjB,6CACmC,IAChCkG,KAAOpK,EAAMwN,aAAalD,OAAO,mBAGpC,eAAC,GAAD,CAASpG,QAAQ,UAAjB,8BAGJ,gBAAC4F,GAAA,EAAU1E,KAAX,WACE,iDACA,+BACE,+CACCpF,EAAMX,iBAGRW,EAAMqN,OACL,gBAAC,GAAD,CAASnJ,QAAQ,UAAjB,wCAC8B,IAC3BkG,KAAOpK,EAAMsN,QAAQhD,OAAO,mBAG/B,eAAC,GAAD,CAASpG,QAAQ,UAAjB,yBAGJ,gBAAC4F,GAAA,EAAU1E,KAAX,WACE,8CAC6B,IAA5BpF,EAAME,WAAW0I,OAChB,eAAC,GAAD,CAAS1E,QAAQ,OAAjB,4BAEA,eAAC4F,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,SACGlE,EAAME,WAAWhB,KAAI,SAACkR,EAAWd,GAAZ,OACpB,eAACxF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,eAACT,GAAA,EAAD,CACEjC,IAAKgK,EAAU/J,MACfiC,IAAK8H,EAAUzM,KACf4E,OAAK,EACL6C,SAAO,MAGX,eAAC1F,GAAA,EAAD,CAAK1B,UAAU,UAAf,SACE,eAAC,QAAD,CAAMW,GAAE,mBAAcyL,EAAU5V,SAAhC,SACG4V,EAAUzM,SAGf,gBAAC+B,GAAA,EAAD,CAAKoD,GAAI,EAAG9E,UAAU,UAAtB,UACGoM,EAAUjH,IADb,OACsBiH,EAAUzJ,MADhC,QAEIyJ,EAAUjH,IAAMiH,EAAUzJ,OAAO4E,QAAQ,UAjB5B+D,gBA2BjC,eAAC5J,GAAA,EAAD,CAAKoD,GAAI,EAAT,SACE,gBAAC7C,GAAA,EAAD,WACE,gBAAC6D,GAAA,EAAD,CAAW5F,QAAQ,QAAnB,UACE,eAAC4F,GAAA,EAAU1E,KAAX,UACE,kDAEF,eAAC0E,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAMkP,mBAGjB,eAACpF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAMoP,sBAGjB,eAACtF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAMqP,iBAGjB,eAACvF,GAAA,EAAU1E,KAAX,UACE,gBAACK,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,eAAO1F,EAAMoN,oBAGfpN,EAAMqN,QACN,gBAACvD,GAAA,EAAU1E,KAAX,WACGyK,GAAc,eAAC,GAAD,IAEbK,EAGA,eAAC,gBAAD,CACEc,OAAQhR,EAAMoN,WACd6D,UArIU,SAACC,GAC7BpP,ELgBoB,SAACD,EAAIqP,GAAL,gDAAuB,WAAOpP,EAAUC,GAAjB,wBAAAC,EAAA,sEAG3CF,EAAS,CACPvD,KAAMpB,KAJmC,EASvC4E,IADkBxC,EARqB,EAQzCD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAdK,SAkBpBC,KAAM0K,IAAN,sBACNlL,EADM,SAErBqP,EACAjP,GArByC,gBAkBnCM,EAlBmC,EAkBnCA,KAMRT,EAAS,CACPvD,KAAMnB,GACNoB,QAAS+D,IA1BgC,kDA6B3CT,EAAS,CACPvD,KAAMlB,GACNmB,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAlC6B,0DAAvB,wDKhBXyO,CAASzB,EAASwB,OAgIX,eAAC,GAAD,UAUPlB,GAAkB,eAAC,GAAD,IAClBzQ,GACCA,EAASgG,SACTvF,EAAMqN,SACLrN,EAAMuN,aACL,eAACzD,GAAA,EAAU1E,KAAX,UACE,eAACnB,GAAA,EAAD,CACE1F,KAAK,SACLyF,UAAU,gBACVqB,QAhJK,WACrBvD,ELuHwB,SAAC9B,GAAD,gDAAW,WAAO8B,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACPvD,KAAMT,KAH2B,EAQ/BiE,IADkBxC,EAPa,EAOjCD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbH,SAiBZC,KAAM0K,IAAN,sBACN/M,EAAMkG,IADA,eAErB,GACAjE,GApBiC,gBAiB3BM,EAjB2B,EAiB3BA,KAMRT,EAAS,CACPvD,KAAMR,GACNS,QAAS+D,IAzBwB,kDA4BnCT,EAAS,CACPvD,KAAMP,GACNQ,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UAjCqB,0DAAX,wDKvHf0O,CAAapR,KA4IR,2CCzIHqR,GAjFQ,SAAC,GAAiB,IAAftO,EAAc,EAAdA,QAClBjB,EAAWsC,cACXkN,EAAWjN,aAAY,SAAChG,GAAD,OAAWA,EAAMwB,mBACtCvF,EAA0BgX,EAA1BhX,QAASqE,EAAiB2S,EAAjB3S,MAAOmB,EAAUwR,EAAVxR,MAGhBP,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAGSgS,EADElN,aAAY,SAAChG,GAAD,OAAWA,EAAMiC,qBACxCV,QAERsI,qBAAU,WACJ3I,GAAYA,EAASgG,QACvBzD,EzBsLmB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACPvD,KAAMvC,KAHmB,EAQvB+F,IADkBxC,EAPK,EAOzBD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbX,SAiBJC,KAAMC,IAAN,cAAyBL,GAjBrB,gBAiBnBM,EAjBmB,EAiBnBA,KAERT,EAAS,CACPvD,KAAMtC,GACNuC,QAAS+D,IArBgB,kDAwB3BT,EAAS,CACPvD,KAAMrC,GACNsC,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA7Ba,0DAAN,yDyBpLnBK,EAAQO,KAAK,YAEd,CAACxB,EAAUiB,EAASxD,EAAUgS,IAEjC,IAAMC,EAAgB,SAAC3P,GACjBwO,OAAOoB,QAAQ,+CACjB3P,EzBgNoB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACPvD,KAAMnC,KAHsB,EAQ1B2F,IADkBxC,EAPQ,EAO5BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbR,SAiBPC,KAAMqP,OAAN,4BAAkC7P,EAAlC,KAAyCI,GAjBlC,gBAiBtBM,EAjBsB,EAiBtBA,KAERT,EAAS,CACPvD,KAAMlC,GACNmC,QAAS+D,IArBmB,kDAwB9BT,EAAS,CACPvD,KAAMjC,GACNkC,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA7BgB,0DAAR,wDyBhNXiP,CAAW9P,KAIxB,OACE,iCACE,wCACCvH,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAAC0E,UAAQ,EAACC,OAAK,EAAC1E,YAAU,EAACnJ,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,wCACA,6BAGJ,iCACGlE,EAAMZ,KAAI,SAACQ,GAAD,OACT,gCACE,8BAAKA,EAAKwG,MACV,8BAAKxG,EAAKiE,OACV,8BAAKjE,EAAKgM,QACV,8BACGhM,EAAK6F,QACJ,oBAAGvB,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAE5C,oBAAG9B,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAIhD,gCACE,eAAC,iBAAD,CAAenB,GAAE,sBAAiBjF,EAAKwG,IAAtB,SAAjB,SACE,eAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAIjB,eAACC,GAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVqB,QAAS,kBAAMmM,EAAc9R,EAAKwG,MAHpC,SAKE,oBAAGlC,UAAU,wBAxBVtE,EAAKwG,iBC8Db4L,GAzGQ,SAAC,GAAwB,IAAtB5I,EAAqB,EAArBA,MAAOnG,EAAc,EAAdA,QACzBgP,EAAS7I,EAAMW,OAAOhI,GADiB,EAGrBe,mBAAS,IAHY,oBAGtCe,EAHsC,KAGhCwI,EAHgC,OAInBvJ,mBAAS,IAJU,oBAItC8I,EAJsC,KAI/BC,EAJ+B,OAKf/I,oBAAS,GALM,oBAKtC2C,EALsC,KAK7ByM,EAL6B,KAMvClQ,EAAWsC,cAEXuI,EAActI,aAAY,SAAChG,GAAD,OAAWA,EAAMoB,sBAEzCd,EAAyBgO,EAAzBhO,MAAOrE,EAAkBqS,EAAlBrS,QAASoF,EAASiN,EAATjN,KAElBuS,EAAa5N,aAAY,SAAChG,GAAD,OAAWA,EAAMkC,qBAGvC2R,EAGLD,EAHFtT,MACSwT,EAEPF,EAFF3X,QACS8X,EACPH,EADFrS,QAGFsI,qBAAU,WACJkK,GACFtQ,EAAS,CAAEvD,KAAM7B,KACjBqG,EAAQO,KAAK,qBAER5D,EAAKiE,MAAQjE,EAAKwG,MAAQ+E,OAAO8G,IAGpC5F,EAAQzM,EAAKiE,MACbgI,EAASjM,EAAKgM,OACdsG,EAAWtS,EAAK6F,UAJhBzD,EAASF,GAAemQ,MAO3B,CAACrS,EAAMqS,EAAQjQ,EAAUsQ,EAAerP,IAc3C,OACE,iCACE,eAAC,QAAD,CAAM4B,GAAG,kBAAT,qBACA,gBAAC,GAAD,WACE,4CACCwN,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAC1C5X,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,gBAACsE,GAAA,EAAD,CAAMC,SAxBQ,SAACC,GACrBA,EAAEC,iBACFtB,E1BgOsB,SAACpC,GAAD,gDAAU,WAAOoC,EAAUC,GAAjB,wBAAAC,EAAA,sEAEhCF,EAAS,CACPvD,KAAMhC,KAHwB,EAQ5BwF,IADkBxC,EAPU,EAO9BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbN,SAiBTC,KAAM0K,IAAN,4BACArN,EAAKwG,IADL,KAErBxG,EACAuC,GApB8B,gBAiBxBM,EAjBwB,EAiBxBA,KAMRT,EAAS,CACPvD,KAAM/B,KAGRsF,EAAS,CACPvD,KAAM9C,EACN+C,QAAS+D,IA7BqB,kDAgChCT,EAAS,CACPvD,KAAM9B,GACN+B,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UArCkB,0DAAV,wD0B/NpB2P,CAAW,CACTnM,IAAKxG,EAAKwG,IACVvC,KAAMA,EACN+H,MAAOA,EACPnG,QAASA,MAiBP,UACE,gBAACtC,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GACTgJ,EAAQhJ,EAAEW,OAAOC,aAKvB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,4BACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,QACLqF,YAAY,cACZG,MAAO2H,EACP7H,SAAU,SAACV,GACTwI,EAASxI,EAAEW,OAAOC,aAKxB,eAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,UAAtB,SACE,eAACzH,GAAA,EAAK2L,MAAN,CACErQ,KAAK,WACLsQ,MAAM,WACNC,QAASvJ,EACT1B,SAAU,SAACV,GACT6O,EAAW7O,EAAEW,OAAOgL,cAK1B,eAAC7K,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,8BCqCGoO,GAhIW,SAAC,GAAwB,IAAtBvP,EAAqB,EAArBA,QACrBjB,GAD0C,EAAZoH,MACnB9E,eAEXsE,EAAcrE,aAAY,SAAChG,GAAD,OAAWA,EAAMD,sBACzC9D,EAA0CoO,EAA1CpO,QAASqE,EAAiC+J,EAAjC/J,MAAOtE,EAA0BqO,EAA1BrO,SAAUqE,EAAgBgK,EAAhBhK,MAAOD,EAASiK,EAATjK,KAEnC8T,EAAgBlO,aAAY,SAAChG,GAAD,OAAWA,EAAMmC,wBAExCgS,EAGPD,EAHFjY,QACOmY,EAELF,EAFF5T,MACS4S,EACPgB,EADF3S,QAGI8S,EAAgBrO,aAAY,SAAChG,GAAD,OAAWA,EAAMoC,wBAExCkS,EAIPD,EAJFpY,QACOsY,EAGLF,EAHF/T,MACSkU,EAEPH,EAFF9S,QACSkT,EACPJ,EADFlY,QAIM+E,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAEJsD,EAAUE,EAAQQ,SAASoF,OAE/BT,qBAAU,WACRpG,EAAS,CAAEvD,KAAM/E,IACZ+F,EAASgG,SACZxC,EAAQO,KAAK,UAGXuP,EACF9P,EAAQO,KAAR,yBAA+BwP,EAAe5M,IAA9C,UAEApE,EAAS8E,GAAa/D,MAEvB,CACDf,EACAiB,EACAxD,EACAgS,EACAsB,EACAC,EACAjQ,IAGF,IAAM2O,EAAgB,SAAC3P,GACjBwO,OAAOoB,QAAQ,kDACjB3P,ErBMuB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAEjCF,EAAS,CAAEvD,KAAMrF,IAFgB,EAM7B6I,IADkBxC,EALW,EAK/BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAXL,SAeVC,KAAMqP,OAAN,+BAAqC7P,EAArC,KAA4CI,GAflC,cAezBM,KAERT,EAAS,CACPvD,KAAMpF,IAlByB,kDAqBjC2I,EAAS,CACPvD,KAAMnF,EACNoF,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA1BmB,0DAAR,wDqBNdqQ,CAAclR,KAQ3B,OACE,iCACE,gBAAC4D,GAAA,EAAD,CAAKzB,UAAU,qBAAf,UACE,eAAC0B,GAAA,EAAD,UACE,6CAGF,eAACA,GAAA,EAAD,CAAK1B,UAAU,aAAf,SACE,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOqB,QAZJ,WAC3BvD,ErBgCyB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CAAEvD,KAAMlF,IAFc,EAM3B0I,IADkBxC,EALS,EAK7BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAXP,SAeRC,KAAMmI,KAAN,wBAAoC,GAAIvI,GAfhC,gBAevBM,EAfuB,EAevBA,KAERT,EAAS,CACPvD,KAAMjF,EACNkF,QAAS+D,IAnBoB,kDAsB/BT,EAAS,CACPvD,KAAMhF,EACNiF,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA3BiB,0DAAN,0DqBrBnB,UACE,oBAAGsB,UAAU,gBADf,0BAMHwO,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASvO,QAAQ,SAAjB,SAA2BuO,IAE1CE,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAS1O,QAAQ,SAAjB,SAA2B0O,IAE1CtY,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,iCACE,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAAC0E,UAAQ,EAACC,OAAK,EAAC1E,YAAU,EAACnJ,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,wCACA,2CACA,wCACA,6BAGJ,iCACG3J,EAAS6E,KAAI,SAAC1E,GAAD,OACZ,gCACE,8BAAKA,EAAQ0L,MACb,8BAAK1L,EAAQmJ,OACb,oCAAMnJ,EAAQmM,SACd,8BAAKnM,EAAQwY,WACb,8BAAKxY,EAAQyY,QACb,gCACE,eAAC,iBAAD,CAAetO,GAAE,yBAAoBnK,EAAQ0L,IAA5B,SAAjB,SACE,eAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACE,oBAAGA,UAAU,oBAIjB,eAACC,GAAA,EAAD,CACEC,QAAQ,SACRF,UAAU,SACVqB,QAAS,kBAAMmM,EAAchX,EAAQ0L,MAHvC,SAKE,oBAAGlC,UAAU,wBAlBVxJ,EAAQ0L,aAyBvB,eAAC,GAAD,CAAUxH,MAAOA,EAAOD,KAAMA,EAAM8G,SAAS,WCoFxC2N,GAhNW,SAAC,GAAwB,IAAtBhK,EAAqB,EAArBA,MAAOnG,EAAc,EAAdA,QAC5BwH,EAAYrB,EAAMW,OAAOhI,GADiB,EAGxBe,mBAAS,IAHe,oBAGzCe,EAHyC,KAGnCwI,EAHmC,OAItBvJ,mBAAS,GAJa,oBAIzC+D,EAJyC,KAIlCwM,EAJkC,OAKtBvQ,mBAAS,IALa,oBAKzCyD,EALyC,KAKlC+M,EALkC,OAMtBxQ,mBAAS,IANa,oBAMzCqQ,EANyC,KAMlCI,EANkC,OAOhBzQ,mBAAS,IAPO,oBAOzCoQ,EAPyC,KAO/BM,EAP+B,OAQR1Q,mBAAS,GARD,oBAQzCoH,EARyC,KAQ3BuJ,EAR2B,OASV3Q,mBAAS,IATC,oBASzCmH,EATyC,KAS5ByJ,EAT4B,OAUd5Q,oBAAS,GAVK,oBAUzC6Q,EAVyC,KAU9BC,EAV8B,KAY1C5R,EAAWsC,cAEXoF,EAAiBnF,aAAY,SAAChG,GAAD,OAAWA,EAAMO,yBAC5CD,EAA4B6K,EAA5B7K,MAAOrE,EAAqBkP,EAArBlP,QAASE,EAAYgP,EAAZhP,QAElBmZ,EAAgBtP,aAAY,SAAChG,GAAD,OAAWA,EAAMqC,wBAE1CwR,EAGLyB,EAHFhV,MACSwT,EAEPwB,EAFFrZ,QACS8X,EACPuB,EADF/T,QAIML,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAER2I,qBAAU,WACJkK,GACFtQ,EAAS,CAAEvD,KAAM3E,IACjBmJ,EAAQO,KAAK,uBAER9I,EAAQmJ,MAAQnJ,EAAQ0L,MAAQ+E,OAAOV,IAG1C4B,EAAQ3R,EAAQmJ,MAChBwP,EAAS3Y,EAAQmM,OACjByM,EAAS5Y,EAAQ6L,OACjBgN,EAAS7Y,EAAQyY,OACjBK,EAAY9Y,EAAQwY,UACpBO,EAAgB/Y,EAAQwP,cACxBwJ,EAAehZ,EAAQuP,cARvBjI,EAAS+E,GAAkB0D,MAW9B,CAAC/P,EAAS+P,EAAWzI,EAAUiB,EAASqP,IAE3C,IAgBMwB,EAAiB,yCAAG,WAAOzQ,GAAP,wBAAAnB,EAAA,6DAClB6R,EAAO1Q,EAAEW,OAAOgQ,MAAM,IAEtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAc1J,GAE9BmJ,GAAa,GARW,SAWhBzR,EAAS,CACbC,QAAS,CACP,eAAgB,sBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAdhB,SAkBCC,KAAMmI,KAC3B,wBACAuJ,EACA9R,GArBoB,gBAkBdM,EAlBc,EAkBdA,KAKRmR,GAAa,GACbN,EAAS7Q,GAxBa,kDA0BtBmR,GAAa,GA1BS,0DAAH,sDA8BvB,OACE,iCACE,eAAC,QAAD,CAAM/O,GAAG,qBAAT,qBACA,gBAAC,GAAD,WACE,+CACCwN,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAShO,QAAQ,SAAjB,SAA2BgO,IAE1C5X,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,gBAACsE,GAAA,EAAD,CAAMC,SA3DQ,SAACC,GACrBA,EAAEC,iBACFtB,EtByEyB,SAACtH,GAAD,gDAAa,WAAOsH,EAAUC,GAAjB,wBAAAC,EAAA,sEAEtCF,EAAS,CAAEvD,KAAM9E,IAFqB,EAMlCsI,IADkBxC,EALgB,EAKpCD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAXA,SAefC,KAAM0K,IAAN,+BACGvS,EAAQ0L,IADX,KAErB1L,EACAyH,GAlBoC,gBAe9BM,EAf8B,EAe9BA,KAMRT,EAAS,CACPvD,KAAM7E,EACN8E,QAAS+D,IAGXT,EAAS,CACPvD,KAAMvF,EACNwF,QAAS+D,IA5B2B,kDA+BtCT,EAAS,CACPvD,KAAM5E,EACN6E,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UApCwB,0DAAb,wDsBxEvBwR,CAAc,CACZhO,IAAKqE,EACL5G,KAAMA,EACNgD,MAAOA,EACPN,MAAOA,EACP4M,MAAOA,EACPD,SAAUA,EACVhJ,aAAcA,EACdD,YAAaA,MAgDX,UACE,gBAAC9G,GAAA,EAAKwH,MAAN,CAAYC,UAAU,OAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,mBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,aACZG,MAAOJ,EACPE,SAAU,SAACV,GACTgJ,EAAQhJ,EAAEW,OAAOC,aAKvB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,SACLqF,YAAY,cACZG,MAAO4C,EACP9C,SAAU,SAACV,GACTgQ,EAAShQ,EAAEW,OAAOC,aAKxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,cACZG,MAAOsC,EACPxC,SAAU,SAACV,GACTiQ,EAASjQ,EAAEW,OAAOC,UAItB,eAACd,GAAA,EAAKkR,KAAN,CACEtS,GAAG,aACHgN,MAAM,cACNuF,QAAM,EACNvQ,SAAU+P,IAEXH,GAAa,eAAC,GAAD,OAGhB,gBAACxQ,GAAA,EAAKwH,MAAN,CAAYC,UAAU,QAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,cACZG,MAAOkP,EACPpP,SAAU,SAACV,GACTkQ,EAASlQ,EAAEW,OAAOC,aAKxB,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,eAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,oBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,SACLqF,YAAY,cACZG,MAAOiG,EACPnG,SAAU,SAACV,GACToQ,EAAgBpQ,EAAEW,OAAOC,aAK/B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,WAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,uBACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,iBACZG,MAAOiP,EACPnP,SAAU,SAACV,GACTmQ,EAAYnQ,EAAEW,OAAOC,aAK3B,gBAACd,GAAA,EAAKwH,MAAN,CAAYC,UAAU,cAAtB,UACE,eAACzH,GAAA,EAAK0H,MAAN,0BACA,eAAC1H,GAAA,EAAKS,QAAN,CACEnF,KAAK,OACLqF,YAAY,oBACZG,MAAOgG,EACPlG,SAAU,SAACV,GACTqQ,EAAerQ,EAAEW,OAAOC,aAK9B,eAACE,GAAA,EAAD,CAAQ1F,KAAK,SAAS2F,QAAQ,UAA9B,8BC7HGmQ,GA3ES,SAAC,GAAiB,IAAftR,EAAc,EAAdA,QACnBjB,EAAWsC,cACXkQ,EAAYjQ,aAAY,SAAChG,GAAD,OAAWA,EAAMsC,oBACvCrG,EAA2Bga,EAA3Bha,QAASqE,EAAkB2V,EAAlB3V,MAAO0B,EAAWiU,EAAXjU,OAGhBd,EADU8E,aAAY,SAAChG,GAAD,OAAWA,EAAMiB,oBACvCC,SAUR,OARA2I,qBAAU,WACJ3I,GAAYA,EAASgG,QACvBzD,EVwJoB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE5BF,EAAS,CACPvD,KAAMZ,KAHoB,EAQxBoE,IADkBxC,EAPM,EAO1BD,iBAAoBC,SAGhB0C,EAAS,CACbC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD,OAAY5C,EAAS6C,SAbV,SAiBLC,KAAMC,IAAN,eAA0BL,GAjBrB,gBAiBpBM,EAjBoB,EAiBpBA,KAERT,EAAS,CACPvD,KAAMX,GACNY,QAAS+D,IArBiB,kDAwB5BT,EAAS,CACPvD,KAAMV,GACNW,QACE,KAAMgE,UAAY,KAAMA,SAASD,KAAKE,OAClC,KAAMD,SAASD,KAAKE,OACpB,KAAMC,UA7Bc,0DAAN,yDUtJpBK,EAAQO,KAAK,YAEd,CAACxB,EAAUiB,EAASxD,IAGrB,iCACE,yCACCjF,EACC,eAAC,GAAD,IACEqE,EACF,eAAC,GAAD,CAASuF,QAAQ,SAAjB,SAA2BvF,IAE3B,gBAACsO,GAAA,EAAD,CAAOC,SAAO,EAAC0E,UAAQ,EAACC,OAAK,EAAC1E,YAAU,EAACnJ,UAAU,WAAnD,UACE,iCACE,gCACE,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGJ,iCACG3D,EAAOnB,KAAI,SAACc,GAAD,OACV,gCACE,8BAAKA,EAAMkG,MACX,8BAAKlG,EAAMN,MAAQM,EAAMN,KAAKiE,OAC9B,8BAAKyG,KAAOpK,EAAMqK,WAAWC,OAAO,kBACpC,oCAAMtK,EAAMoN,cACZ,8BACGpN,EAAMqN,OACLjD,KAAOpK,EAAMsN,QAAQhD,OAAO,gBAE5B,oBAAGtG,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAIhD,8BACG9F,EAAMuN,YACLnD,KAAOpK,EAAMwN,aAAalD,OAAO,gBAEjC,oBAAGtG,UAAU,eAAe+B,MAAO,CAAED,MAAO,WAIhD,8BACE,eAAC,iBAAD,CAAenB,GAAE,iBAAY3E,EAAMkG,KAAnC,SACE,eAACjC,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAvBGhE,EAAMkG,iBCEdqO,OA7Bf,WACE,OACE,gBAAC,cAAD,WACE,eAAC,GAAD,IACA,uBAAMvQ,UAAU,OAAhB,SACE,gBAACU,GAAA,EAAD,WACE,eAAC,KAAD,CAAO8P,KAAK,IAAIC,UAAWhM,GAAYiM,OAAK,IAC5C,eAAC,KAAD,CAAOF,KAAK,SAASC,UAAWhJ,KAChC,eAAC,KAAD,CAAO+I,KAAK,YAAYC,UAAWvI,KACnC,eAAC,KAAD,CAAOsI,KAAK,WAAWC,UAAW/H,KAClC,eAAC,KAAD,CAAO8H,KAAK,YAAYC,UAAW3G,KACnC,eAAC,KAAD,CAAO0G,KAAK,WAAWC,UAAWhG,KAClC,eAAC,KAAD,CAAO+F,KAAK,cAAcC,UAAW1F,KACrC,eAAC,KAAD,CAAOyF,KAAK,aAAaC,UAAWhF,KACpC,eAAC,KAAD,CAAO+E,KAAK,eAAeC,UAAWxL,KACtC,eAAC,KAAD,CAAOuL,KAAK,aAAaC,UAAWzJ,KAEpC,eAAC,KAAD,CAAOwJ,KAAK,kBAAkBC,UAAWpD,KACzC,eAAC,KAAD,CAAOmD,KAAK,uBAAuBC,UAAW3C,KAC9C,eAAC,KAAD,CAAO0C,KAAK,qBAAqBC,UAAWnC,KAC5C,eAAC,KAAD,CAAOkC,KAAK,0BAA0BC,UAAWvB,KACjD,eAAC,KAAD,CAAOsB,KAAK,mBAAmBC,UAAWJ,UAG9C,eAAC,GAAD,QChCSM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,eAAC,IAAD,CAAU7T,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFgP,SAAS8E,eAAe,SAM1BX,M","file":"static/js/main.aeeb3029.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nconst initialProdcutListState = {\n  products: [],\n  loading: false,\n};\n\nconst initialProductState = {\n  product: {\n    reviews: [],\n  },\n  loading: false,\n};\n\nexport const productListReducer = (state = initialProdcutListState, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        products: [],\n      };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        products: action.payload.products,\n        page: action.payload.page,\n        pages: action.payload.pages,\n      };\n    case PRODUCT_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (state = initialProductState, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        product: action.payload,\n      };\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_DELETE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n      };\n    case PRODUCT_DELETE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        product: action.payload,\n      };\n    case PRODUCT_CREATE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n        product: action.payload,\n      };\n    case PRODUCT_UPDATE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case PRODUCT_UPDATE_RESET:\n      return {\n        product: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true,\n      };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case PRODUCT_TOP_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        products: action.payload,\n      };\n    case PRODUCT_TOP_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from \"../constants/cartConstants\";\n\nconst cartItems = [];\nconst shippongAddress = {};\n\nexport const cartReducer = (state = { cartItems, shippongAddress }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      // check if an item is added in our cart already, comparing cartItems(old item) with payload(new item)\n      const item = action.payload;\n      const existItem = state.cartItems.find(\n        (cartItem) => cartItem.product === item.product\n      ); // .product is equal to _id which we set in payload (cartActions)\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map(\n            (cartItem) =>\n              cartItem.product === existItem.product ? item : cartItem // replace/update old(exist) item with new item\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          (cartItem) => cartItem.product !== action.payload\n        ),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      };\n    default:\n      return state;\n  }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\n\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from \"../constants/userConstants\";\n\nconst initialUserState = {\n  loading: true,\n};\n\nexport const userLoginReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_LOGIN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_LOGIN_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_REGISTER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        userInfo: action.payload,\n      };\n    case USER_REGISTER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n      };\n    case USER_DETAILS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_DETAILS_RESET:\n      return {\n        ...state,\n        user: {},\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        success: true, //send a success message whenever user updates his profile successfully\n        userInfo: action.payload,\n      };\n    case USER_UPDATE_PROFILE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_UPDATE_PROFILE_RESET: // reset/clean the state after we update profile successfully\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case USER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload,\n      };\n    case USER_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case USER_LIST_RESET:\n      return {\n        ...state,\n        users: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return {\n        loading: true,\n      };\n    case USER_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case USER_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      };\n    default:\n      return state;\n  }\n};\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // shows a history of the changes to the state in your Redux Store over time.\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productCreateReviewReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderDeliverReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productListReducer,\n  productDetailsReducer,\n  cartReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  orderListReducer,\n  orderDeliverReducer,\n  productCreateReviewReducer,\n  productTopRatedReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : []; // since our localStorage value is string, we have to convert back to a javascript object\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cartReducer: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLoginReducer: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\n// https://redux.js.org/api/createstore\n// We can obtain the global state/value using useSelector, we defined these earlier when combining reducers(e.g., productListReducer).\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return {\n        ...state,\n        orders: [],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: { \"Content-type\": \"application/json\" },\n    };\n\n    // to get back our user token\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      { username: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    // Keep our user info status in the localStorage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET }); // clean our user details after logout\n  dispatch({ type: ORDER_LIST_MY_RESET }); // clean our user orders after logout\n  dispatch({ type: USER_LIST_RESET }); // clean our user list after logout\n  dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n};\n\nexport const register = (name, email, password) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: { \"Content-type\": \"application/json\" },\n    };\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      { name: name, email: email, password: password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    // Keep our user info status in the localStorage\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    // console.log(getState());\n\n    /*\n    These two lines are equal to the object destructuring below \n    const { userLoginReducer } = getState();\n    const { userInfo } = userLoginReducer;\n    */\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    // We have to include a bearer token to get our user as we do in the postman header\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}/`, config); //id here is equal to 'profile' => /api/users/profile/, and we have to pass the token to get the user data\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    // We have to include a bearer token to get our user as we do in the postman header\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/profile/update/`,\n      user,\n      config\n    ); // we pass in our user object(from the parameter) to update the new user info\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n    // To log in our user with the new info and store the new data in the localStorage\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/users/update/${user._id}/`,\n      user,\n      config\n    );\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchBox = () => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  let history = useHistory(); //since this is just a component(not a actual page), we need to use useHistory to get our history props instead of destructing props of our component.\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/?search=${keyword}&page=1`); //when creating a new search, we start at the first page\n    } else {\n      history.push(history.location.pathname);\n    }\n  };\n  return (\n    <div>\n      <Form onSubmit={submitHandler} inline>\n        <Form.Control\n          type=\"text\"\n          name=\"q\"\n          placeholder=\"Search Products...\"\n          onChange={(e) => setKeyword(e.target.value)}\n          className=\"mr-sm-2 ml-sm-5\"\n        ></Form.Control>\n        <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n          Search\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport SearchBox from \"./SearchBox\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>DemoShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>User</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Product</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; DemoShop</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","const Rating = ({ rating, review, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 1\n              ? \"fas fa-star\"\n              : rating >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 2\n              ? \"fas fa-star\"\n              : rating >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 3\n              ? \"fas fa-star\"\n              : rating >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 4\n              ? \"fas fa-star\"\n              : rating >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 5\n              ? \"fas fa-star\"\n              : rating >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n\n      <span className=\"ml-1\">{review && review}</span>\n      {/* <span className=\"ml-1\">{review !== \"\" ? review.length : 0}</span> */}\n    </div>\n  );\n};\n\nexport default Rating;\n","import { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\nimport { Link } from \"react-router-dom\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      {/* we use Link instead of <a> tag to load a component. <a> tag will load a new page(e.g., page refresh) */}\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"div\">\n          <div className=\"my-3\">\n            {/* {product.rating} from {product.numReviews} reviews */}\n            <Rating\n              rating={product.rating}\n              review={`${product.numReviews} reviews`}\n              color={\"#f8e825\"}\n            />\n          </div>\n        </Card.Text>\n\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const listProducts = (keyword = \"\") => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    // since we only want to get the 'data' attribute in the object, we use the destructuring assignment\n    // we also added the proxy to our package.json, we only needed the \"/api/products\" part\n    const { data } = await axios.get(`/api/products/${keyword}`);\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listProducDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n    const { data } = await axios.get(`/api/products/${id}/`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    // console.log(error.response);\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/create/`, {}, config);\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/update/${product._id}/`,\n      product,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/products/${productId}/reviews/`,\n      review,\n      config\n    );\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    // since we only want to get the 'data' attribute in the object, we use the destructuring assignment\n    // we also added the proxy to our package.json, we only needed the \"/api/products\" part\n    const { data } = await axios.get(`/api/products/top/`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        height: \"100px\",\n        width: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({ page, pages, keyword = \"\", isAdmin = false }) => {\n  if (keyword) {\n    keyword = keyword.split(\"?search=\")[1].split(\"&\")[0];\n  }\n\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? `/?search=${keyword}&page=${x + 1}`\n                : `/admin/productlist/?search=${keyword}&page=${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, CarouselItem, Image } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRatedReducer);\n  const { error, loading, products } = productTopRated;\n\n  useEffect(() => dispatch(listTopProducts()), [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid></Image>\n            <Carousel.Caption className=\"carousel.caption\">\n              <h4>\n                {product.name} (${product.price})\n              </h4>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport ProductCarousel from \"../components/ProductCarousel\";\n\n// import axios from \"axios\n// import products from \"../products\";\n\nconst HomeScreen = ({ history }) => {\n  /*\n  // we have switched local state(useState) to global state(redux)\n  const [products, setProducts] = useState([]);\n\n  // useEffect triggers by default when a component loads or a state value is updated (every render)\n  // with empty array argument will trigger the callback only after the first render.\n  useEffect(() => {\n    async function fetchProducts() {\n      // since we only want to get the 'data' attribute in the object, we use the destructuring assignment\n      // we also added the proxy to our package.json, we only needed the \"/api/products\" part\n      const { data } = await axios.get(\"/api/products\");\n      // console.log(data);\n      setProducts(data);\n    }\n    fetchProducts();\n  }, []);\n  */\n\n  const dispatch = useDispatch();\n\n  // const productList = useSelector((state) => console.log(state)); // Get our product list from our store\n  const productList = useSelector((state) => state.productListReducer);\n  const { error, loading, products, page, pages } = productList;\n\n  // console.log(history);\n  let keyword = history.location.search;\n  // console.log(keyword); // To get our url parameter(..../?search=xxx) after clicking search.\n\n  useEffect(() => {\n    dispatch(listProducts(keyword));\n  }, [dispatch, keyword]);\n\n  return (\n    <div>\n      {!keyword && <ProductCarousel />}\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : products.length === 0 ? (\n        <Message variant=\"info\">No matches found</Message>\n      ) : (\n        <div>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate page={page} pages={pages} keyword={keyword} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  listProducDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\nimport moment from \"moment\";\n\n// import products from \"../products\";\n// import axios from \"axios\";\n\nconst ProductScreen = ({ match, history }) => {\n  // Route will pass match/history/location as props to the child component, we can access by checking console.log(props.match.params.id);\n  // const product = products.find((p) => p._id === match.params.id);\n\n  /*\n  // we have switched local state(useState) to global state(redux)\n  const [product, setProduct] = useState([]);\n\n  useEffect(() => {\n    async function fetchProduct() {\n      const { data } = await axios.get(`/api/products/${match.params.id}`);\n      setProduct(data);\n    }\n    fetchProduct();\n  }, []);\n  */\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetailsReducer);\n  const { loading, error, product } = productDetails;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  const productCreateReview = useSelector(\n    (state) => state.productCreateReviewReducer\n  );\n  const {\n    loading: loadingProductReview,\n    error: errorProductReview,\n    success: successProductReview,\n  } = productCreateReview;\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProducDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    // console.log(history);\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating: rating,\n        comment: comment,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid></Image>\n            </Col>\n            <Col md={3}>\n              {/* flush variant to remove outer borders and rounded corners */}\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    rating={product.rating}\n                    review={`${product.numReviews} reviews`}\n                    color={\"#f8e825\"}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col className=\"my-auto\">Qty</Col>\n                        <Col xs=\"auto\" className=\"my-1\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => {\n                              setQty(e.target.value);\n                            }}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (currentCount) => (\n                                <option\n                                  key={currentCount + 1}\n                                  value={currentCount + 1}\n                                >\n                                  {currentCount + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                    >\n                      Add to Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n\n          <Row>\n            <Col md={6}>\n              <h4>Reviews</h4>\n              {product.reviews.length === 0 && (\n                <Message variant=\"info\">No Reviews</Message>\n              )}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating rating={review.rating} color=\"#f8e825\"></Rating>\n                    <p>{moment(review.createdAt).format(\"MMMM Do YYYY\")}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n\n                <ListGroup.Item>\n                  <h4>Write a Customer Review</h4>\n\n                  {loadingProductReview && <Loader />}\n                  {successProductReview && (\n                    <Message variant=\"success\">\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Review</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          rows={8}\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        disabled={loadingProductReview}\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"info\">\n                      Please <Link to=\"/login\">Login</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  // Returns the current state tree(object) of your application. It is equal to the last value returned by the store's reducer.\n  // console.log(getState());\n  localStorage.setItem(\n    \"cartItems\",\n    JSON.stringify(getState().cartReducer.cartItems) // localStorage key/value only accepts string\n  );\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\n    \"cartItems\",\n    JSON.stringify(getState().cartReducer.cartItems) // localStorage key/value only accepts string\n  );\n};\n\nexport const saveShippingAddress = (shippingData) => async (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: shippingData,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(shippingData));\n};\n\nexport const savePaymentMethod = (paymentData) => async (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: paymentData,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(paymentData));\n};\n","import { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n  // console.log(location);\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  // only run when we add product to our cart(contained id and qty attributes in url)\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const cart = useSelector((state) => state.cartReducer);\n  const { cartItems } = cart;\n\n  // if user is logged in, redirect to the shipping page. if not, redirect to the login page\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"info\">\n            Your cart is empty <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((cartItem) => (\n              <ListGroup.Item key={cartItem.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image\n                      src={cartItem.image}\n                      alt={cartItem.name}\n                      fluid\n                      rounded\n                    />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/products/${cartItem.product}`}>\n                      {cartItem.name}\n                    </Link>\n                  </Col>\n                  <Col md={2}>${cartItem.price}</Col>\n                  <Col md={3}>\n                    <Form.Control\n                      as=\"select\"\n                      value={cartItem.qty}\n                      onChange={(e) => {\n                        dispatch(\n                          addToCart(cartItem.product, Number(e.target.value))\n                        );\n                      }}\n                    >\n                      {[...Array(cartItem.countInStock).keys()].map(\n                        (currentCount) => (\n                          <option\n                            key={currentCount + 1}\n                            value={currentCount + 1}\n                          >\n                            {currentCount + 1}\n                          </option>\n                        )\n                      )}\n                    </Form.Control>\n                  </Col>\n                  <Col md={1}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(cartItem.product)} // cart.Item is our product._id\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal{\" \"}\n                {cartItems.reduce(\n                  (accumulator, cartItem) => accumulator + cartItem.qty,\n                  0\n                )}{\" \"}\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce(\n                  (accumulator, cartItem) =>\n                    accumulator + cartItem.qty * cartItem.price,\n                  0\n                )\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { login } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n\n  const { error, loading, userInfo } = userLogin;\n\n  // if user already has some parameters(e.g., userInfo), redirect than to other page rather than the register page\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {loading && <Loader />}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redircet=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegisterReducer);\n\n  const { error, loading, userInfo } = userRegister;\n\n  // if user already has some parameters(e.g., userInfo), redirect than to other page rather than the register page\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {loading && <Loader />}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            required\n            type=\"name\"\n            placeholder=\"Enter Name\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Enter Password Again</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password Again\"\n            value={confirmPassword}\n            onChange={(e) => {\n              setconfirmPassword(e.target.value);\n            }}\n          />\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redircet=${redirect}` : \"/login\"}>\n            Sign In\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\nimport moment from \"moment\";\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setconfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetailsReducer);\n  const { error, loading, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector(\n    (state) => state.userUpdateProfileReducer\n  );\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMyReducer);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      // check if a user info has been loaded or performed an update on his profile. It will ensure our user details are up-to-date\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET }); // reset user profile then get new user details below\n        dispatch(getUserDetails(\"profile\"));\n        // dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n      dispatch(listMyOrders());\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {loading && <Loader />}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Enter Password Again</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password Again\"\n              value={confirmPassword}\n              onChange={(e) => {\n                setconfirmPassword(e.target.value);\n              }}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{moment(order.createdAt).format(\"MMMM Do YYYY\")}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      moment(order.paidAt).format(\"MMMM Do YYYY\")\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      moment(order.deliveredAt).format(\"MMMM Do YYYY\")\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from \"../constants/orderConstants\";\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\nimport axios from \"axios\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    // We have to include a bearer token to get our user as we do in the postman header\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders/add/`, order, config); // we pass in our user object(from the parameter) to update the new user info\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    });\n\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  // console.log(paymentResult);\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay/`,\n      paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/`, config);\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLoginReducer: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/delivered/`,\n      {},\n      config\n    );\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n","import { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Login</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cartReducer);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [state, setState] = useState(shippingAddress.state);\n  const [postCode, setPostCode] = useState(shippingAddress.postCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, state, postCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Address\"\n            value={address ? address : \"\"}\n            onChange={(e) => {\n              setAddress(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter City\"\n            value={city ? city : \"\"}\n            onChange={(e) => {\n              setCity(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"state\">\n          <Form.Label>State</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter State\"\n            value={state ? state : \"\"}\n            onChange={(e) => {\n              setState(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"postCode\">\n          <Form.Label>Post Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Cost Code\"\n            value={postCode ? postCode : \"\"}\n            onChange={(e) => {\n              setPostCode(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter Country\"\n            value={country ? country : \"\"}\n            onChange={(e) => {\n              setCountry(e.target.value);\n            }}\n          />\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cartReducer);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n\n  const [paymentMethod, SetPaymentMethod] = useState(\"Paypal\");\n\n  if (!shippingAddress.address) {\n    history.push(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => SetPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport Message from \"../components/Message\";\nimport { createOrder } from \"../actions/orderActions\";\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const orderCreate = useSelector((state) => state.orderCreateReducer);\n  const { order, error, success } = orderCreate;\n\n  const cart = useSelector((state) => state.cartReducer);\n  const dispatch = useDispatch();\n\n  cart.itemsPrice = cart.cartItems\n    .reduce((acc, cartItem) => acc + cartItem.price * cartItem.qty, 0)\n    .toFixed(2);\n\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\n\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  if (!cart.paymentMethod) {\n    history.push(\"/payment\");\n  }\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n      // reset the order info once we completed the order\n      dispatch({\n        type: ORDER_CREATE_RESET,\n      });\n    }\n  }, [success, history, dispatch]);\n\n  const placeOrder = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.ItemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Shipping: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.state},{\"  \"}\n                {cart.shippingAddress.postCode},{\"  \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {cart.paymentMethod}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message variant=\"info\"> Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((cartItem, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={cartItem.image}\n                            alt={cartItem.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col className=\"my-auto\">\n                          <Link to={`/product/${cartItem.product}`}>\n                            {cartItem.name}\n                          </Link>\n                        </Col>\n                        <Col md={4} className=\"my-auto\">\n                          {cartItem.qty} X ${cartItem.price} = $\n                          {(cartItem.qty * cartItem.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems.length === 0}\n                  onClick={placeOrder}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport moment from \"moment\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const orderDetails = useSelector((state) => state.orderDetailsReducer);\n  const { order, error, loading } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPayReducer);\n  // since we already have loading declared before, we named as loadingPay here\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const orderDeliver = useSelector((state) => state.orderDeliverReducer);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, orderItem) => acc + orderItem.price * orderItem.qty, 0)\n      .toFixed(2);\n  }\n\n  const addPaypalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AYegyE2SssjoD0bpt2WrsMAGhhOafwuIwWum9qL4DCZFMjQH3ICCe_RuREoO3lp1-W4KGZ1ReYY4hETo\";\n    script.async = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    if (\n      !order ||\n      successPay ||\n      order._id !== Number(orderId) ||\n      successDeliver\n    ) {\n      dispatch({\n        type: ORDER_PAY_RESET,\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET,\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order)); // order object from orderDetails above\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.state},{\"  \"}\n                {order.shippingAddress.postCode},{\"  \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Your order has been delivered on{\" \"}\n                  {moment(order.deliveredAt).format(\"MMMM Do YYYY\")}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n\n              {order.isPaid ? (\n                <Message variant=\"success\">\n                  Your order has been paid on{\" \"}\n                  {moment(order.paidAt).format(\"MMMM Do YYYY\")}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((orderItem, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={2}>\n                          <Image\n                            src={orderItem.image}\n                            alt={orderItem.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col className=\"my-auto\">\n                          <Link to={`/product/${orderItem.product}`}>\n                            {orderItem.name}\n                          </Link>\n                        </Col>\n                        <Col md={4} className=\"my-auto\">\n                          {orderItem.qty} X ${orderItem.price} = $\n                          {(orderItem.qty * orderItem.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping:</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax:</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total:</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n            {loadingDeliver && <Loader />}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn btn-block\"\n                    onClick={deliverHandler}\n                  >\n                    Mark As Deliver\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const userList = useSelector((state) => state.userListReducer);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDeleteReducer);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo, successDelete]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <div>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default UserListScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetailsReducer);\n\n  const { error, loading, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdateReducer);\n\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist/\");\n    } else {\n      if (!user.name || user._id !== Number(userId)) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [user, userId, dispatch, successUpdate, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUser({\n        _id: user._id,\n        name: name,\n        email: email,\n        isAdmin: isAdmin,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/userlist\">Go Back</Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter Email\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is admin\"\n                checked={isAdmin}\n                onChange={(e) => {\n                  setIsAdmin(e.target.checked);\n                }}\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default UserEditScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productListReducer);\n  const { loading, error, products, pages, page } = productList;\n\n  const productDelete = useSelector((state) => state.productDeleteReducer);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreateReducer);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  let keyword = history.location.search;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      dispatch(listProducts(keyword));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    keyword,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <div>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i> Create Prodcut\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div>\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductListScreen;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProducDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetailsReducer);\n  const { error, loading, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdateReducer);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== Number(productId)) {\n        dispatch(listProducDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [product, productId, dispatch, history, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name: name,\n        price: price,\n        image: image,\n        brand: brand,\n        category: category,\n        countInStock: countInStock,\n        description: description,\n      })\n    );\n  };\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    // https://developer.mozilla.org/en-US/docs/Web/API/FormData/append\n    const formData = new FormData();\n\n    formData.append(\"image\", file);\n    formData.append(\"product_id\", productId);\n\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/products/upload/\",\n        formData,\n        config\n      );\n      setUploading(false);\n      setImage(data);\n    } catch (error) {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <Link to=\"/admin/productlist\">Go Back</Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter Name\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Price\"\n                value={price}\n                onChange={(e) => {\n                  setPrice(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Image\"\n                value={image}\n                onChange={(e) => {\n                  setImage(e.target.value);\n                }}\n              />\n\n              <Form.File\n                id=\"image-file\"\n                label=\"Choose File\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Brand\"\n                value={brand}\n                onChange={(e) => {\n                  setBrand(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"countinstock\">\n              <Form.Label>Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Stock\"\n                value={countInStock}\n                onChange={(e) => {\n                  setCountInStock(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => {\n                  setCategory(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Description\"\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </div>\n  );\n};\n\nexport default ProductEditScreen;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\nimport moment from \"moment\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n  const orderList = useSelector((state) => state.orderListReducer);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLoginReducer);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <div>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{moment(order.createdAt).format(\"MMMM Do YYYY\")}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    moment(order.paidAt).format(\"MMMM Do YYYY\")\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  {order.isDelivered ? (\n                    moment(order.deliveredAt).format(\"MMMM Do YYYY\")\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  );\n};\n\nexport default OrderListScreen;\n","import { Container } from \"react-bootstrap\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          {/* ? is optional parameter in a <Route> */}\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}